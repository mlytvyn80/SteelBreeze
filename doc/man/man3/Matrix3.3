.TH "Matrix3" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Matrix3 \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbVector3\&.H>\fP
.PP
Inherited by \fBRotMatrix\fP, \fBSBFrame\fP, \fBSBNutation\fP, \fBSBPolus\fP, \fBSBPolusNRO\fP, \fBSBPrecession\fP, and \fBSBPrecNutNRO\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrix3\fP ()"
.br
.ti -1c
.RI "\fBMatrix3\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP (const \fBVector3\fP &col0, const \fBVector3\fP &col1, const \fBVector3\fP &col2)"
.br
.ti -1c
.RI "\fBMatrix3\fP (double a00, double a01, double a02, double a10, double a11, double a12, double a20, double a21, double a22)"
.br
.ti -1c
.RI "virtual \fB~Matrix3\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.ti -1c
.RI "virtual double & \fBoperator()\fP (\fBDIRECTION\fP i, \fBDIRECTION\fP j)"
.br
.ti -1c
.RI "virtual double \fBat\fP (\fBDIRECTION\fP i, \fBDIRECTION\fP j) const "
.br
.ti -1c
.RI "virtual void \fBreport2Log\fP (\fBSBLog::LogLevel\fP, uint, const QString &) const "
.br
.ti -1c
.RI "virtual double \fBmodule\fP () const "
.br
.ti -1c
.RI "virtual void \fBunify\fP ()"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBT\fP () const "
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator=\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator+=\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator-=\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator*=\fP (double)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator/=\fP (double)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "double \fBmat\fP [3][3]"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBMatrix3\fP \fBoperator+\fP (const \fBMatrix3\fP &, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator-\fP (const \fBMatrix3\fP &, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator/\fP (const \fBMatrix3\fP &, double)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator*\fP (const \fBMatrix3\fP &, double)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator*\fP (double, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator-\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator*\fP (const \fBMatrix3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator*\fP (const \fBMatrix3\fP &, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator~\fP (const \fBMatrix3\fP &)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 117 of file SbVector3\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Matrix3::Matrix3 ()\fC [inline]\fP"
.PP
Definition at line 340 of file SbVector3\&.H'\&.
.PP
References mat\&.
.PP
Referenced by SBPrecNutNRO::operator()(), and T()\&.
.SS "Matrix3::Matrix3 (const \fBMatrix3\fP &M)\fC [inline]\fP"
.PP
Definition at line 363 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "Matrix3::Matrix3 (const \fBVector3\fP &col0, const \fBVector3\fP &col1, const \fBVector3\fP &col2)\fC [inline]\fP"Creates object'\&. Arguments are \fBVector3\fP, three columns'\&. 
.PP
Definition at line 347 of file SbVector3\&.H'\&.
.PP
References Vector3::at(), mat, X_AXIS, Y_AXIS, and Z_AXIS\&.
.SS "Matrix3::Matrix3 (doublea00, doublea01, doublea02, doublea10, doublea11, doublea12, doublea20, doublea21, doublea22)\fC [inline]\fP"Creates object'\&. Arguments are doubles: first row, second row and third row'\&. 
.PP
Definition at line 354 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "virtual Matrix3::~Matrix3 ()\fC [inline, virtual]\fP"
.PP
Definition at line 136 of file SbVector3\&.H'\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual double Matrix3::at (\fBDIRECTION\fPi, \fBDIRECTION\fPj) const\fC [inline, virtual]\fP"
.PP
Definition at line 139 of file SbVector3\&.H'\&.
.PP
References mat\&.
.PP
Referenced by SBTestMatrix::createMatrixWidget(), SBTestMatrix::displayValues(), and SBRunManager::makeReportTRFVariations()\&.
.SS "virtual QString Matrix3::ClassName () const\fC [inline, virtual]\fP"
.PP
Reimplemented in \fBSBFrameNRO\fP, \fBSBFrameClassic\fP, \fBSBFrame\fP, \fBSBRotate\fP, \fBSBPolusNRO\fP, \fBSBPolus\fP, \fBSBPrecNutNRO\fP, \fBSBNut_IAU2000\fP, \fBSBNut_IAU1980\fP, \fBSBNutation\fP, \fBSBPrec_IAU2000\fP, \fBSBPrec_IAU1976\fP, \fBSBPrecession\fP, \fBRot2DerMatrix\fP, \fBRotDerMatrix\fP, and \fBRotMatrix\fP'\&.
.PP
Definition at line 137 of file SbVector3\&.H'\&.
.PP
Referenced by operator~()\&.
.SS "double Matrix3::module () const\fC [inline, virtual]\fP"
.PP
Definition at line 410 of file SbVector3\&.H'\&.
.PP
References mat\&.
.PP
Referenced by operator~(), and unify()\&.
.SS "virtual double& Matrix3::operator() (\fBDIRECTION\fPi, \fBDIRECTION\fPj)\fC [inline, virtual]\fP"
.PP
Definition at line 138 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator*= (doublev)\fC [inline]\fP"
.PP
Definition at line 394 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator+= (const \fBMatrix3\fP &M)\fC [inline]\fP"
.PP
Definition at line 378 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator-= (const \fBMatrix3\fP &M)\fC [inline]\fP"
.PP
Definition at line 386 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator/= (doublev)\fC [inline]\fP"
.PP
Definition at line 402 of file SbVector3\&.H'\&.
.PP
References mat\&.
.PP
Referenced by unify()\&.
.SS "\fBMatrix3\fP & Matrix3::operator= (const \fBMatrix3\fP &M)\fC [inline]\fP"
.PP
Definition at line 370 of file SbVector3\&.H'\&.
.PP
References mat\&.
.SS "void Matrix3::report2Log (\fBSBLog::LogLevel\fPLev, uintFac, const QString &Pref) const\fC [virtual]\fP"
.PP
Definition at line 76 of file SbVector3\&.C'\&.
.PP
References Log, mat, and SBLog::write()\&.
.PP
Referenced by SBFrameClassic::calc(), SBSolidTideLd::operator()(), SBPrec_IAU1976::operator()(), SBPrec_IAU2000::operator()(), SBNut_IAU1980::operator()(), SBNut_IAU2000::operator()(), and SBPolus::operator()()\&.
.SS "\fBMatrix3\fP Matrix3::T () const\fC [inline]\fP"Returns transposed matrix (original matrix does'n change)'\&. 
.PP
Definition at line 418 of file SbVector3\&.H'\&.
.PP
References mat, and Matrix3()\&.
.PP
Referenced by SBDelay::calcDerivatives()\&.
.SS "virtual void Matrix3::unify ()\fC [inline, virtual]\fP"
.PP
Definition at line 142 of file SbVector3\&.H'\&.
.PP
References module(), and operator/=()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBMatrix3\fP operator* (const \fBMatrix3\fP &M1, doublev2)\fC [friend]\fP"
.PP
Definition at line 493 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator* (doublev1, const \fBMatrix3\fP &M2)\fC [friend]\fP"
.PP
Definition at line 502 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator* (const \fBMatrix3\fP &, const \fBVector3\fP &)\fC [friend]\fP"
.SS "\fBMatrix3\fP operator* (const \fBMatrix3\fP &M1, const \fBMatrix3\fP &M2)\fC [friend]\fP"
.PP
Definition at line 59 of file SbVector3\&.C'\&.
.SS "\fBMatrix3\fP operator+ (const \fBMatrix3\fP &M1, const \fBMatrix3\fP &M2)\fC [friend]\fP"
.PP
Definition at line 450 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator- (const \fBMatrix3\fP &M1, const \fBMatrix3\fP &M2)\fC [friend]\fP"
.PP
Definition at line 467 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator- (const \fBMatrix3\fP &M1)\fC [friend]\fP"
.PP
Definition at line 433 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator/ (const \fBMatrix3\fP &M1, doublev2)\fC [friend]\fP"
.PP
Definition at line 484 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator~ (const \fBMatrix3\fP &M1)\fC [friend]\fP"Returns inversed matrix: A*~A=~A*A=1 (original matrix does'n change)'\&. 
.PP
Definition at line 95 of file SbVector3\&.C'\&.
.SH "Member Data Documentation"
.PP 
.SS "double \fBMatrix3::mat\fP[3][3]\fC [protected]\fP"
.PP
Definition at line 120 of file SbVector3\&.H'\&.
.PP
Referenced by at(), Matrix3(), module(), operator()(), RotMatrix::operator()(), RotDerMatrix::operator()(), Rot2DerMatrix::operator()(), SBNut_IAU1980::operator()(), SBNut_IAU2000::operator()(), operator*(), operator*=(), operator+(), operator+=(), operator-(), operator-=(), operator/(), operator/=(), operator=(), operator~(), report2Log(), and T()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
