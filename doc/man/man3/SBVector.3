.TH "SBVector" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SBVector \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbVector\&.H>\fP
.PP
Inherits \fBSBNamed\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSBVector\fP ()"
.br
.ti -1c
.RI "\fBSBVector\fP (unsigned int N_, const QString &Name_, bool IsNeedClear=TRUE)"
.br
.ti -1c
.RI "\fBSBVector\fP (const \fBSBVector\fP &V)"
.br
.ti -1c
.RI "virtual \fB~SBVector\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.ti -1c
.RI "unsigned int \fBn\fP () const "
.br
.ti -1c
.RI "double & \fBoperator()\fP (unsigned int)"
.br
.ti -1c
.RI "void \fBset\fP (unsigned int, double)"
.br
.ti -1c
.RI "double \fBat\fP (unsigned int) const "
.br
.ti -1c
.RI "double \fBmodule\fP () const "
.br
.ti -1c
.RI "\fBSBVector\fP & \fBunify\fP ()"
.br
.ti -1c
.RI "\fBSBVector\fP \fBunit\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBoperator=\fP (const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBoperator=\fP (double)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBoperator+=\fP (const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBoperator-=\fP (const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBoperator*=\fP (double)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBoperator/=\fP (double)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSBVector\fP &) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSBVector\fP &V) const "
.br
.ti -1c
.RI "const QString & \fBname\fP () const "
.br
.ti -1c
.RI "void \fBsetName\fP (const QString &Name_)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBN\fP"
.br
.ti -1c
.RI "double * \fBB\fP"
.br
.ti -1c
.RI "QString \fBName\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBSBMatrix\fP"
.br
.ti -1c
.RI "class \fBSBUpperMatrix\fP"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator-\fP (const \fBSBVector\fP &V)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator/\fP (const \fBSBVector\fP &V, double f)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator*\fP (const \fBSBVector\fP &V, double f)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator*\fP (double f, const \fBSBVector\fP &V)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator+\fP (const \fBSBVector\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator-\fP (const \fBSBVector\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "double \fBoperator*\fP (const \fBSBVector\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator*\fP (const \fBSBMatrix\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBmatT_x_vec\fP (const \fBSBMatrix\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBmatT_x_vec\fP (const \fBSBUpperMatrix\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBretVector\fP (unsigned int, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBSolve\fP (const \fBSBUpperMatrix\fP &, \fBSBVector\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator<<\fP (QDataStream &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator>>\fP (QDataStream &, \fBSBVector\fP &)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "int \fBcmp\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator<<\fP (QDataStream &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator>>\fP (QDataStream &, \fBSBNamed\fP &)"
.br
.in -1c
.SH "Detailed Description"
.PP 
class Vector'\&. 
.PP
Definition at line 55 of file SbVector\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SBVector::SBVector ()\fC [inline]\fP"A constructor'\&. Creates an empty vector (for I/O purposes)'\&. 
.PP
Definition at line 69 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.PP
Referenced by unit()\&.
.SS "SBVector::SBVector (unsigned intN_, const QString &Name_, boolIsNeedClear = \fCTRUE\fP)\fC [inline]\fP"A constructor'\&. Creates a copy of object'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIN\fP number of elements'\&. 
.RE
.PP

.PP
Definition at line 74 of file SbVector\&.H'\&.
.PP
References B, clear(), and N\&.
.SS "SBVector::SBVector (const \fBSBVector\fP &V)\fC [inline]\fP"A constructor'\&. Creates a copy of object'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIV\fP values of the new object'\&. 
.RE
.PP

.PP
Definition at line 81 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.SS "virtual SBVector::~SBVector ()\fC [inline, virtual]\fP"A destructor'\&. 
.PP
Definition at line 85 of file SbVector\&.H'\&.
.PP
References B\&.
.SH "Member Function Documentation"
.PP 
.SS "double SBVector::at (unsigned inti) const\fC [inline]\fP"Returns value of i-th element'\&. 
.PP
Definition at line 177 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.PP
Referenced by SBFilterModel::analyseSeries(), SBMEM::calcA_LSBackward(), SBMEM::calcA_LSFnB(), SBMEM::calcA_LSForward(), SBMEM::calcA_Recusion(), SBFilterGauss::calcSigma(), SBEstimator::dataUpdate(), SBEstimator::dataUpdateGlobalConstr(), SBFilterModel::eliminateBefore(), SBFilterGauss::interpolate(), SBFilterGauss::interpolateMinusModel(), SBMEM::interval(), makeHouseholder(), SBEstimator::mapContStochs4NewBatch(), SBFilterModel::modelFull(), SBFilterModel::modelKeep(), SBEstimator::moveGlobalInfo(), SBEstimator::moveGlobalInfo_Old(), operator<<(), SBFilterGauss::prepareModels(), SBEstimator::processObs(), SBEstimator::propagateStochasticPars(), SBMEM::readDataFile(), SBSpectrumAnalyserMEM::redrawDataPlot(), SBMEM::removeShiftsFromData(), SBMEM::removeTrendsFromData(), SBFilterGauss::sigma(), sinex_SolutionNormalEquationVectorBlock(), Solve(), SBEstimator::solveLocals(), SBSpline::solveSpline(), SBEstimator::solveStochs(), SBParameterList::updateSolution(), and writeNormalEquationSystem()\&.
.SS "virtual QString SBVector::ClassName () const\fC [inline, virtual]\fP"Refers to a class name (debug info)'\&. 
.PP
Reimplemented from \fBSBNamed\fP'\&.
.PP
Definition at line 87 of file SbVector\&.H'\&.
.PP
Referenced by at(), operator()(), operator+=(), operator-=(), operator=(), operator==(), and set()\&.
.SS "void SBVector::clear ()\fC [inline]\fP"Fills elements with zero'\&. 
.PP
Definition at line 109 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.PP
Referenced by SBEstimator::dataUpdate(), SBEstimator::dataUpdateGlobalConstr(), makeHouseholder(), operator=(), SBEstimator::propagateStochasticPars(), SBVector(), SBFilterModel::setNumOfHarmonics(), SBFilterModel::setNumOfPolinoms(), and writeNormalEquationSystem()\&.
.SS "double SBVector::module () const\fC [inline]\fP"Returns vector's module'\&. 
.PP
Definition at line 187 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.PP
Referenced by unify(), and unit()\&.
.SS "unsigned int SBVector::n () const\fC [inline]\fP"Returns number of elements'\&. 
.PP
Definition at line 92 of file SbVector\&.H'\&.
.PP
References N\&.
.PP
Referenced by SBDataSeriesEntry::n(), operator<<(), SBFilterGauss::readDataFile(), and SBParameterList::updateSolution()\&.
.SS "const QString& SBNamed::name () const\fC [inline, inherited]\fP"
.PP
Definition at line 215 of file SbGeo\&.H'\&.
.PP
References SBNamed::Name\&.
.PP
Referenced by SBVLBINetEntryEditor::accept(), SBSourceEditor::acquireData(), SBSiteEditor::acquireData(), SBStationEditor::acquireData(), SBStochParameter::addPar(), SBProject::addSession(), SBSite::addStation(), SBParameterList::append(), at(), SBMatrix::at(), SBUpperMatrix::at(), SBSymMatrix::at(), SBStation::axisOffsetLenght(), SBSolutionBrowser::batch4StochEOPChanged(), SBSolutionBrowser::batch4StochSoChanged(), SBSolutionBrowser::batch4StochStChanged(), SBEphem::calc(), SBStation::calcDisplacement(), SBSetupDialog::chkPacker(), SBVLBIPreProcess::clearPars(), SBEstimator::collectContStochs4NextBatch(), collectListOfSINEXParameters(), collectListOfSINEXParameters4NEQ(), SB_CRF::collectObjAliases(), SBObsVLBIStatistics::collectStatistics(), SBRunManager::constraintSourceCoord(), SBRunManager::constraintStationCoord(), SBRunManager::constraintStationVeloc(), SBSource::createParameters(), SBProjectCreate::createProject(), SBTestFrame::createWidget4Test(), SBTestEphem::createWidget4Test(), SBVLBIPreProcess::currentSesChange(), SBPlotArea::defineAreas(), SBSiteEditor::deleteEntry(), SBVLBISetView::deleteEntry(), SBStuffSources::deleteEntryS(), SBStuffStations::deleteEntryS(), SBSolution::deleteSolution(), SBSetupDialog::delInst(), SBSetupDialog::delPacker(), SBEstimator::Group::delParameter(), SBProjectEdit::delSession(), SBProject::delSession(), SBSite::delStation(), SBPlateMotion::displacement(), SBStuffAplo::draw(), SBPlotArea::drawFrames(), SBStochParameter::dump2File(), SBSolution::dumpParameters(), SBBaseInfo::dumpUserInfo(), SBSourceInfo::dumpUserInfo(), SBVLBISession::dumpUserInfo(), SBVLBISet::dumpUserInfo(), SBParametersEditor::editParameter(), SBAploChunk::fillDict(), SBVLBISet::fillDicts(), SBVLBIPreProcess::fillObsListView(), SBVLBIPreProcess::fillSessAttr(), SBCatalog::find(), SBSolution::getGlobalParameter4Report(), SBAploChunk::import(), SBVLBISet::import(), SBEcc::importEccDat(), SBAploEphem::importHPS(), SBMaster::importMF(), SBProjectCreate::init(), SBFCList::insert(), SBInstitutionList::insert(), SBCatalog::insert(), SBParameterList::inSort(), SBCatalog::inSort(), SBStochParameterList::inSort(), SB_TRF::inSort(), SBObsVLBIStatSrcLI::key(), SBParameterLI::key(), SBSourceListItem::key(), SBStationListItem::key(), SBObsVLBIStatStaLI::key(), SBVLBISesInfoLI::key(), SBSiteListItem::key(), SBObsVLBIStatRecordLI::key(), SBBasInfoLI::key(), SBSouInfoLI::key(), SBAploEntryLI::key(), SBTestStationLI::key(), SBStationImport::loadNScodes(), SBStationImport::loadOLoad(), SBSolution::loadStatistics(), SBRunManager::loadVLBISession_m1(), SBRunManager::loadVLBISessions_m2(), SB_CRF::lookupNearest(), SB_TRF::lookupNearest(), SBSolutionBrowser::lookupParameters(), SBSourceEditor::makeApply(), SBSiteEditor::makeApply(), SBStationEditor::makeApply(), SBRunManager::makeReportCRF(), SBRunManager::makeReportCRFVariations(), SBRunManager::makeReportCRFVariations4IVS(), SBRunManager::makeReportEOP(), SBRunManager::makeReportMaps(), SBRunManager::makeReportNormalEqs(), SBRunManager::makeReports(), SBRunManager::makeReportSessionStatistics(), SBRunManager::makeReportTRF(), SBRunManager::makeReportTRFVariations(), SBRunManager::makeReportTroposphere(), SBEstimator::mapContStochs4NewBatch(), SBMaster::mapFiles(), SBMaster::mapRecords(), matT_x_mat(), SBEstimator::moveGlobalInfo(), SBEstimator::moveGlobalInfo_Old(), SBFileConv::open4In(), SBFileConv::open4Out(), SBEphem::openFile(), operator()(), SBSolidTideLd::operator()(), SBTideLd::operator()(), SBMatrix::operator()(), SBRefraction::operator()(), SBUpperMatrix::operator()(), operator*(), operator+(), operator+=(), SBMatrix::operator+=(), SBUpperMatrix::operator+=(), operator-(), operator-=(), SBMatrix::operator-=(), SBUpperMatrix::operator-=(), SBObsVLBIEntry::operator<(), operator<<(), operator=(), SBMatrix::operator=(), SBUpperMatrix::operator=(), SBVLBISesInfo::operator=(), operator==(), SBObsVLBIEntry::operator==(), SBVLBISesInfo::operator==(), operator>>(), operator~(), SBSymMatrix::operator~(), SBPlotArea::output4Files(), SBSolution::path2GlbDir(), SBSolution::path2LocDir(), SBSolution::path2StcDir(), SBEstimator::prepare4Local(), SBSite::prepareDicts(), SBVLBIPreProcess::preProcess(), SBObsVLBIEntry::process(), SBRunManager::process_m1(), SBRunManager::process_m2(), SBVLBIPreProcess::procScenario_2(), SBProjectSel::ProjectListItem::ProjectListItem(), QuadraticForm(), SBRefraction::refrDir(), SBAploEphem::registerStation(), SBInstitutionList::remove(), SBParameterList::remove(), SBStochParameterList::remove(), SBVLBISet::removeSession(), SBParameterList::report(), SBStochParameter::report(), SBBaseInfo::restoreUserInfo(), SBSourceInfo::restoreUserInfo(), SBVLBISession::restoreUserInfo(), RRT(), RTR(), SBParameter::rw(), SBPlot::save2PS(), SBVLBISet::saveSession(), SBRunManager::saveVLBISessions_m1(), SBRunManager::saveVLBISessions_m2(), SBCoordsEditor::SBCoordsEditor(), SBEstimator::SBEstimator(), SBModelEditor::SBModelEditor(), SBObsVLBIStatBrowser::SBObsVLBIStatBrowser(), SBObsVLBIStatSrc::SBObsVLBIStatSrc(), SBObsVLBIStatSta::SBObsVLBIStatSta(), SBParametersEditor::SBParametersEditor(), SBPlateMotion::SBPlateMotion(), SBPlot::SBPlot(), SBPlotDialog::SBPlotDialog(), SBProjectEdit::SBProjectEdit(), SBRunManager::SBRunManager(), SBSolution::SBSolution(), SBSolutionBrowser::SBSolutionBrowser(), SBStuffEphem::SBStuffEphem(), SBTestAPLoad::SBTestAPLoad(), SBTestDiurnEOP::SBTestDiurnEOP(), SBTestEphem::SBTestEphem(), SBTestFrame::SBTestFrame(), SBTestNutation::SBTestNutation(), SBTestOceanTides::SBTestOceanTides(), SBTestPolarTides::SBTestPolarTides(), SBTestSolidTides::SBTestSolidTides(), SBVLBINetEntryEditor::SBVLBINetEntryEditor(), SBVLBISessionEditor::SBVLBISessionEditor(), set(), SBMatrix::set(), SBUpperMatrix::set(), SBMatrix::setCol(), SBUpperMatrix::setCol(), SBFCList::setDefault(), SB_TRF::setSiteName(), SBMatrix::setVector(), SBUpperMatrix::setVector(), Solve(), SBEstimator::solveLocals(), SBObsVLBIEntry::source(), SBTestSolidTides::stationChange(), SBTestOceanTides::stationChange(), SBTestPolarTides::stationChange(), SBTestAPLoad::stationChange(), SBParameter::str4compare(), SBRunManager::stripTRF(), SBSolution::submitGlobalParameters(), SBSolution::submitLocalParameters(), SBSolution::submitStochasticParameters(), SBMatrix::T(), SBUpperMatrix::T(), SBFileConvLI::text(), SBParameterLI::text(), SBObsVLBIStatSrcLI::text(), SBSourceListItem::text(), SBStationListItem::text(), SBObsVLBIStatStaLI::text(), SBVLBISesInfoLI::text(), SBSolutionBatchLI::text(), SBSiteListItem::text(), SBObsVLBIStatRecordLI::text(), SBVLBISesPreProcLI::text(), SBSetupDialog::SBInstLI::text(), SBBasInfoLI::text(), SBSouInfoLI::text(), SBAploEntryLI::text(), SBTestStationLI::text(), SBVLBINetworkEditor::NetworkListItem::text(), SBMasterRecBrowser::SBMRListItem::text(), SBStochParameter::update(), SBSolution::updateParameter(), SBVLBIPreProcess::updateSession(), SBParameterList::updateSolution(), SBMainWindow::UtilitiesCollectStat4Prj(), SBPlateMotion::velocity(), SBVLBIPreProcess::wAttributes(), SBSourceEditor::wCoordinates(), SBParametersEditor::wEOPParameters(), SBSolutionBrowser::wLocalEOPPars(), SBSolutionBrowser::wLocalSoPars(), SBSolutionBrowser::wLocalStPars(), SBStationEditor::wNames(), SBVLBISessionEditor::wObservs(), SBParametersEditor::wOtherParameters(), SBVLBISessionEditor::wParameters(), writeNormalEquationSystem(), SBSiteEditor::wSite(), SBParametersEditor::wSourceParameters(), SBParametersEditor::wStationParameters(), SBSolutionBrowser::wStochEOPPars(), SBSolutionBrowser::wStochSoPars(), SBSolutionBrowser::wStochStPars(), SBParametersEditor::wTestParameters(), and SBSolutionBrowser::wWRMSs()\&.
.SS "bool SBVector::operator!= (const \fBSBVector\fP &V) const\fC [inline]\fP"Comperes vector with another one, returns TRUE if values are different'\&. 
.PP
Definition at line 125 of file SbVector\&.H'\&.
.SS "double & SBVector::operator() (unsigned inti)\fC [inline]\fP"Returns the reference to i-th element'\&. 
.PP
Definition at line 156 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.SS "\fBSBVector\fP & SBVector::operator*= (doublef)\fC [inline]\fP"Multiplies vector by scalar'\&. 
.PP
Definition at line 239 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.SS "\fBSBVector\fP & SBVector::operator+= (const \fBSBVector\fP &V)\fC [inline]\fP"Increments vector by another one'\&. 
.PP
Definition at line 213 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.SS "\fBSBVector\fP & SBVector::operator-= (const \fBSBVector\fP &V)\fC [inline]\fP"Decrements vector by another one'\&. 
.PP
Definition at line 226 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.SS "\fBSBVector\fP & SBVector::operator/= (doublef)\fC [inline]\fP"Divides vector by scalar'\&. 
.PP
Definition at line 246 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.SS "\fBSBVector\fP & SBVector::operator= (const \fBSBVector\fP &V)\fC [inline]\fP"Assign the vector to another one'\&. 
.PP
Definition at line 194 of file SbVector\&.H'\&.
.PP
References B, ClassName(), clear(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.SS "\fBSBVector\fP & SBVector::operator= (doublef)\fC [inline]\fP"Fills the vector with a double'\&. 
.PP
Definition at line 206 of file SbVector\&.H'\&.
.PP
References B, and N\&.
.SS "bool SBVector::operator== (const \fBSBVector\fP &V) const\fC [inline]\fP"Comperes vector with another one, returns TRUE if values are equal'\&. 
.PP
Definition at line 253 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.SS "void SBVector::set (unsigned inti, doubled_)\fC [inline]\fP"Sets the i-th element to the double'\&. 
.PP
Definition at line 166 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, N, SBNamed::name(), and SBLog::write()\&.
.PP
Referenced by SBFilterModel::analyseSeries(), SBMEM::calcA_LSBackward(), SBMEM::calcA_LSFnB(), SBMEM::calcA_LSForward(), SBFilterGauss::calcSigma(), SBEstimator::dataUpdate(), SBEstimator::dataUpdateGlobalConstr(), SBFilterModel::eliminateAfter(), SBFilterModel::eliminateBefore(), SBFilterGauss::interpolate(), SBFilterGauss::interpolateMinusModel(), makeHouseholder(), SBEstimator::mapContStochs4NewBatch(), SBEstimator::moveGlobalInfo(), SBEstimator::moveGlobalInfo_Old(), operator>>(), SBFilterGauss::prepareModels(), SBObsVLBIEntry::process(), SBEstimator::processConstr(), SBEstimator::processGlobalConstr(), SBEstimator::processObs(), SBEstimator::propagateStochasticPars(), SBMEM::readDataFile(), SBFilterGauss::readDataFile(), SBMEM::removeShiftsFromData(), SBMEM::removeTrendsFromData(), SBEstimator::solveLocals(), SBEstimator::solveStochs(), and writeNormalEquationSystem()\&.
.SS "void SBNamed::setName (const QString &Name_)\fC [inline, inherited]\fP"
.PP
Definition at line 216 of file SbGeo\&.H'\&.
.PP
References SBNamed::Name\&.
.PP
Referenced by SBVLBINetEntryEditor::accept(), SBSourceEditor::acquireData(), SBSiteEditor::acquireData(), SBStationEditor::acquireData(), SBObsVLBIStatistics::collectStatistics(), SBVLBIPreProcess::currentSesChange(), SBVLBISet::import(), SBVLBISet::loadSession(), SBVLBISesInfo::operator=(), operator>>(), SBPlotArea::output4Files(), SBFilteringGauss::redrawDataPlot_ExpMode(), SBBaseInfoList::restoreUserInfo(), SBSourceInfoList::restoreUserInfo(), SBMasterRecord::SBMasterRecord(), SBSolution::SBSolution(), SB_TRF::setSiteName(), SBTestSolidTides::stationChange(), SBTestOceanTides::stationChange(), SBTestPolarTides::stationChange(), SBTestAPLoad::stationChange(), and SBVLBIPreProcess::updateSession()\&.
.SS "\fBSBVector\fP& SBVector::unify ()\fC [inline]\fP"Unifies vector and returns reference to it'\&. 
.PP
Definition at line 105 of file SbVector\&.H'\&.
.PP
References module()\&.
.SS "\fBSBVector\fP SBVector::unit () const\fC [inline]\fP"Returns value of unified vector'\&. 
.PP
Definition at line 107 of file SbVector\&.H'\&.
.PP
References module(), and SBVector()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "int cmp (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP, returns (-1:0:+1)'\&. 
.PP
Definition at line 253 of file SbGeo\&.H'\&.
.PP
Referenced by SBStochParameterList::compareItems(), and SBMasterFile::compareItems()\&.
.SS "\fBSBVector\fP matT_x_vec (const \fBSBMatrix\fP &, const \fBSBVector\fP &)\fC [friend]\fP"
.SS "\fBSBVector\fP matT_x_vec (const \fBSBUpperMatrix\fP &, const \fBSBVector\fP &)\fC [friend]\fP"
.SS "bool operator!= (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 238 of file SbGeo\&.H'\&.
.SS "\fBSBVector\fP operator* (const \fBSBVector\fP &V, doublef)\fC [friend]\fP"
.PP
Definition at line 131 of file SbVector\&.H'\&.
.SS "\fBSBVector\fP operator* (doublef, const \fBSBVector\fP &V)\fC [friend]\fP"
.PP
Definition at line 132 of file SbVector\&.H'\&.
.SS "double operator* (const \fBSBVector\fP &V1, const \fBSBVector\fP &V2)\fC [friend]\fP"Returns a scalar product of two vectors 
.PP
Definition at line 1112 of file SbVector\&.H'\&.
.SS "\fBSBVector\fP operator* (const \fBSBMatrix\fP &, const \fBSBVector\fP &)\fC [friend]\fP"
.SS "\fBSBVector\fP operator+ (const \fBSBVector\fP &V1, const \fBSBVector\fP &V2)\fC [friend]\fP"Returns a sum of two vectors 
.PP
Definition at line 1082 of file SbVector\&.H'\&.
.SS "\fBSBVector\fP operator- (const \fBSBVector\fP &V)\fC [friend]\fP"
.PP
Definition at line 129 of file SbVector\&.H'\&.
.SS "\fBSBVector\fP operator- (const \fBSBVector\fP &V1, const \fBSBVector\fP &V2)\fC [friend]\fP"Returns a difference of two vectors 
.PP
Definition at line 1097 of file SbVector\&.H'\&.
.SS "\fBSBVector\fP operator/ (const \fBSBVector\fP &V, doublef)\fC [friend]\fP"
.PP
Definition at line 130 of file SbVector\&.H'\&.
.SS "bool operator< (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 243 of file SbGeo\&.H'\&.
.SS "QDataStream& operator<< (QDataStream &s, const \fBSBVector\fP &V)\fC [friend]\fP"
.PP
Definition at line 42 of file SbVector\&.C'\&.
.SS "QDataStream & operator<< (QDataStream &s, const \fBSBNamed\fP &W)\fC [friend, inherited]\fP"Saves object to the data stream'\&. 
.PP
Definition at line 258 of file SbGeo\&.H'\&.
.SS "bool operator== (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 233 of file SbGeo\&.H'\&.
.SS "bool operator> (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 248 of file SbGeo\&.H'\&.
.SS "QDataStream& operator>> (QDataStream &s, \fBSBVector\fP &V)\fC [friend]\fP"
.PP
Definition at line 48 of file SbVector\&.C'\&.
.SS "QDataStream & operator>> (QDataStream &s, \fBSBNamed\fP &W)\fC [friend, inherited]\fP"Loads object from the data stream'\&. 
.PP
Definition at line 263 of file SbGeo\&.H'\&.
.SS "\fBSBVector\fP retVector (unsignedint, const \fBSBVector\fP &)\fC [friend]\fP"
.SS "friend class \fBSBMatrix\fP\fC [friend]\fP"
.PP
Definition at line 57 of file SbVector\&.H'\&.
.SS "friend class \fBSBUpperMatrix\fP\fC [friend]\fP"
.PP
Definition at line 58 of file SbVector\&.H'\&.
.SS "\fBSBVector\fP& Solve (const \fBSBUpperMatrix\fP &R, \fBSBVector\fP &x, const \fBSBVector\fP &z)\fC [friend]\fP"
.PP
Definition at line 290 of file SbVector\&.C'\&.
.SH "Member Data Documentation"
.PP 
.SS "double* \fBSBVector::B\fP\fC [protected]\fP"
.PP
Definition at line 61 of file SbVector\&.H'\&.
.PP
Referenced by at(), clear(), module(), operator()(), operator*=(), operator+=(), operator-=(), operator/=(), operator<<(), operator=(), operator==(), operator>>(), SBVector(), set(), SBMatrix::setCol(), SBUpperMatrix::setCol(), SBMatrix::setVector(), SBUpperMatrix::setVector(), and ~SBVector()\&.
.SS "unsigned int \fBSBVector::N\fP\fC [protected]\fP"
.PP
Definition at line 60 of file SbVector\&.H'\&.
.PP
Referenced by at(), clear(), module(), n(), operator()(), operator*=(), operator+=(), operator-=(), operator/=(), operator<<(), operator=(), operator==(), operator>>(), SBVector(), set(), SBMatrix::setCol(), SBUpperMatrix::setCol(), SBMatrix::setVector(), SBUpperMatrix::setVector(), and Solve()\&.
.SS "QString \fBSBNamed::Name\fP\fC [protected, inherited]\fP"
.PP
Definition at line 206 of file SbGeo\&.H'\&.
.PP
Referenced by SBVLBISesInfo::fileName(), SBNamed::name(), operator<<(), SBNamed::operator=(), SBStation::operator=(), SBSite::operator=(), SBOLoadCarrier::operator==(), operator>>(), SBStochParameter::report(), SBNamed::SBNamed(), SBNamed::setName(), SBSite::updateSite(), and SBStation::updateStation()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
