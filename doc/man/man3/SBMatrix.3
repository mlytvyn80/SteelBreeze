.TH "SBMatrix" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SBMatrix \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbVector\&.H>\fP
.PP
Inherits \fBSBNamed\fP'\&.
.PP
Inherited by \fBSBUpperMatrix\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSBMatrix\fP ()"
.br
.ti -1c
.RI "\fBSBMatrix\fP (unsigned int, unsigned int, const QString &, bool=TRUE)"
.br
.ti -1c
.RI "\fBSBMatrix\fP (const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "virtual \fB~SBMatrix\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.ti -1c
.RI "virtual unsigned int \fBnRow\fP () const "
.br
.ti -1c
.RI "virtual unsigned int \fBnCol\fP () const "
.br
.ti -1c
.RI "virtual double & \fBoperator()\fP (unsigned int, unsigned int)"
.br
.ti -1c
.RI "virtual double \fBat\fP (unsigned int, unsigned int) const "
.br
.ti -1c
.RI "virtual void \fBset\fP (unsigned int, unsigned int, double)"
.br
.ti -1c
.RI "\fBSBMatrix\fP & \fBoperator=\fP (const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "virtual \fBSBMatrix\fP & \fBoperator=\fP (double)"
.br
.ti -1c
.RI "\fBSBMatrix\fP & \fBsetCol\fP (unsigned int, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP & \fBsetVector\fP (unsigned int, \fBSBVector\fP &)"
.br
.ti -1c
.RI "virtual void \fBclear\fP ()"
.br
.ti -1c
.RI "virtual \fBSBMatrix\fP \fBT\fP ()"
.br
.ti -1c
.RI "virtual \fBSBMatrix\fP & \fBoperator+=\fP (const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "virtual \fBSBMatrix\fP & \fBoperator-=\fP (const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "\fBSBMatrix\fP & \fBoperator*=\fP (double)"
.br
.ti -1c
.RI "\fBSBMatrix\fP & \fBoperator/=\fP (double)"
.br
.ti -1c
.RI "void \fBresize\fP (unsigned int, unsigned int)"
.br
.ti -1c
.RI "const QString & \fBname\fP () const "
.br
.ti -1c
.RI "void \fBsetName\fP (const QString &Name_)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBSBMatrix\fP (const QString &Name_)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBNRow\fP"
.br
.ti -1c
.RI "unsigned int \fBNCol\fP"
.br
.ti -1c
.RI "double ** \fBB\fP"
.br
.ti -1c
.RI "double \fBdTmp\fP"
.br
.ti -1c
.RI "QString \fBName\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator~\fP ()"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator*\fP (const \fBSBSymMatrix\fP &)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBSBUpperMatrix\fP"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator/\fP (const \fBSBMatrix\fP &M, double f)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator*\fP (const \fBSBMatrix\fP &M, double f)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator*\fP (double f, const \fBSBMatrix\fP &M)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator-\fP (const \fBSBMatrix\fP &M)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator+\fP (const \fBSBMatrix\fP &, const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator-\fP (const \fBSBMatrix\fP &, const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBoperator*\fP (const \fBSBMatrix\fP &, const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "\fBSBSymMatrix\fP \fBQuadraticForm\fP (const \fBSBSymMatrix\fP &, const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "\fBSBMatrix\fP \fBmatT_x_mat\fP (const \fBSBMatrix\fP &, const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBoperator*\fP (const \fBSBMatrix\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "\fBSBVector\fP \fBmatT_x_vec\fP (const \fBSBMatrix\fP &, const \fBSBVector\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator<<\fP (QDataStream &, const \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator>>\fP (QDataStream &, \fBSBMatrix\fP &)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "int \fBcmp\fP (const \fBSBNamed\fP &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator<<\fP (QDataStream &, const \fBSBNamed\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator>>\fP (QDataStream &, \fBSBNamed\fP &)"
.br
.in -1c
.SH "Detailed Description"
.PP 
class \fBSBMatrix\fP'\&.'\&. just a matrix'\&. 
.PP
Definition at line 276 of file SbVector\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SBMatrix::SBMatrix (const QString &Name_)\fC [inline, protected]\fP"A constructor'\&. Creates an empty matrix (for inheritated objects)'\&. 
.PP
Definition at line 288 of file SbVector\&.H'\&.
.PP
References B, dTmp, NCol, and NRow\&.
.SS "SBMatrix::SBMatrix ()\fC [inline]\fP"A constructor'\&. Creates an empty matrix (for I/O purposes)'\&. 
.PP
Definition at line 296 of file SbVector\&.H'\&.
.PP
References B, dTmp, NCol, and NRow\&.
.PP
Referenced by operator*(), and SBSymMatrix::operator*()\&.
.SS "SBMatrix::SBMatrix (unsigned intNRow_, unsigned intNCol_, const QString &Name_, boolIsNeedClear = \fCTRUE\fP)\fC [inline]\fP"A constructor'\&. Creates a copy of object'\&. 
.PP
\fBParameters:\fP
.RS 4
\fINRow_\fP number of rows; 
.br
\fINCol_\fP number of columns'\&. 
.RE
.PP

.PP
Definition at line 402 of file SbVector\&.H'\&.
.PP
References B, dTmp, NCol, and NRow\&.
.SS "SBMatrix::SBMatrix (const \fBSBMatrix\fP &M)\fC [inline]\fP"A constructor'\&. Creates a copy of object'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIM\fP values of the new object'\&. 
.RE
.PP

.PP
Definition at line 417 of file SbVector\&.H'\&.
.PP
References B, dTmp, NCol, and NRow\&.
.SS "SBMatrix::~SBMatrix ()\fC [inline, virtual]\fP"A destructor'\&. 
.PP
Definition at line 431 of file SbVector\&.H'\&.
.PP
References B, and NCol\&.
.SH "Member Function Documentation"
.PP 
.SS "double SBMatrix::at (unsigned inti, unsigned intj) const\fC [inline, virtual]\fP"Returns value of the (i,j)-th element'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 464 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.PP
Referenced by SBFilterModel::analyseSeries(), SBMEM::calcA_LSBackward(), SBMEM::calcA_LSFnB(), SBMEM::calcA_LSForward(), SBSpectrumAnalyserMEM::checkLine(), SBEstimator::collectContStochs4NextBatch(), SBPlotBranch::dataAttr(), SBEstimator::dataUpdate(), SBEstimator::dataUpdateGlobalConstr(), SBTestEOP::fillData4Plotting(), SBTestAPLoad::fillData4Plotting(), SBPlotArea::getLimits(), SBSpline::h(), SBFilterGauss::interpolate(), SBEOP::interpolateEOPs(), makeHouseholder(), SBEstimator::mapContStochs4NewBatch(), SBFilterModel::modelFull(), SBFilterModel::modelKeep(), SBEstimator::moveGlobalInfo(), SBEOP::prepare4Date(), SBSpline::prepare4Spline(), SBEstimator::propagateStochasticPars(), QuadraticForm(), SBSpectrumAnalyserMEM::redrawSpectrumPlot(), SBSpline::solveSpline(), SBSpline::spline(), and writeNormalEquationSystem()\&.
.SS "virtual QString SBMatrix::ClassName () const\fC [inline, virtual]\fP"Refers to a class name (debug info)'\&. 
.PP
Reimplemented from \fBSBNamed\fP'\&.
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 311 of file SbVector\&.H'\&.
.PP
Referenced by at(), matT_x_mat(), operator()(), operator*(), operator+(), operator+=(), operator-(), operator-=(), operator=(), set(), setCol(), and setVector()\&.
.SS "void SBMatrix::clear ()\fC [inline, virtual]\fP"Fills matrix with zeros'\&. 
.PP
Reimplemented in \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 442 of file SbVector\&.H'\&.
.PP
References B, NCol, and NRow\&.
.PP
Referenced by SBEstimator::propagateStochasticPars(), SBFilterModel::setNumOfHarmonics(), and SBFilterModel::setUpSpecModel()\&.
.SS "const QString& SBNamed::name () const\fC [inline, inherited]\fP"
.PP
Definition at line 215 of file SbGeo\&.H'\&.
.PP
References SBNamed::Name\&.
.PP
Referenced by SBVLBINetEntryEditor::accept(), SBSourceEditor::acquireData(), SBSiteEditor::acquireData(), SBStationEditor::acquireData(), SBStochParameter::addPar(), SBProject::addSession(), SBSite::addStation(), SBParameterList::append(), SBVector::at(), at(), SBUpperMatrix::at(), SBSymMatrix::at(), SBStation::axisOffsetLenght(), SBSolutionBrowser::batch4StochEOPChanged(), SBSolutionBrowser::batch4StochSoChanged(), SBSolutionBrowser::batch4StochStChanged(), SBEphem::calc(), SBStation::calcDisplacement(), SBSetupDialog::chkPacker(), SBVLBIPreProcess::clearPars(), SBEstimator::collectContStochs4NextBatch(), collectListOfSINEXParameters(), collectListOfSINEXParameters4NEQ(), SB_CRF::collectObjAliases(), SBObsVLBIStatistics::collectStatistics(), SBRunManager::constraintSourceCoord(), SBRunManager::constraintStationCoord(), SBRunManager::constraintStationVeloc(), SBSource::createParameters(), SBProjectCreate::createProject(), SBTestFrame::createWidget4Test(), SBTestEphem::createWidget4Test(), SBVLBIPreProcess::currentSesChange(), SBPlotArea::defineAreas(), SBSiteEditor::deleteEntry(), SBVLBISetView::deleteEntry(), SBStuffSources::deleteEntryS(), SBStuffStations::deleteEntryS(), SBSolution::deleteSolution(), SBSetupDialog::delInst(), SBSetupDialog::delPacker(), SBEstimator::Group::delParameter(), SBProjectEdit::delSession(), SBProject::delSession(), SBSite::delStation(), SBPlateMotion::displacement(), SBStuffAplo::draw(), SBPlotArea::drawFrames(), SBStochParameter::dump2File(), SBSolution::dumpParameters(), SBBaseInfo::dumpUserInfo(), SBSourceInfo::dumpUserInfo(), SBVLBISession::dumpUserInfo(), SBVLBISet::dumpUserInfo(), SBParametersEditor::editParameter(), SBAploChunk::fillDict(), SBVLBISet::fillDicts(), SBVLBIPreProcess::fillObsListView(), SBVLBIPreProcess::fillSessAttr(), SBCatalog::find(), SBSolution::getGlobalParameter4Report(), SBAploChunk::import(), SBVLBISet::import(), SBEcc::importEccDat(), SBAploEphem::importHPS(), SBMaster::importMF(), SBProjectCreate::init(), SBFCList::insert(), SBInstitutionList::insert(), SBCatalog::insert(), SBParameterList::inSort(), SBCatalog::inSort(), SBStochParameterList::inSort(), SB_TRF::inSort(), SBObsVLBIStatSrcLI::key(), SBParameterLI::key(), SBSourceListItem::key(), SBStationListItem::key(), SBObsVLBIStatStaLI::key(), SBVLBISesInfoLI::key(), SBSiteListItem::key(), SBObsVLBIStatRecordLI::key(), SBBasInfoLI::key(), SBSouInfoLI::key(), SBAploEntryLI::key(), SBTestStationLI::key(), SBStationImport::loadNScodes(), SBStationImport::loadOLoad(), SBSolution::loadStatistics(), SBRunManager::loadVLBISession_m1(), SBRunManager::loadVLBISessions_m2(), SB_CRF::lookupNearest(), SB_TRF::lookupNearest(), SBSolutionBrowser::lookupParameters(), SBSourceEditor::makeApply(), SBSiteEditor::makeApply(), SBStationEditor::makeApply(), SBRunManager::makeReportCRF(), SBRunManager::makeReportCRFVariations(), SBRunManager::makeReportCRFVariations4IVS(), SBRunManager::makeReportEOP(), SBRunManager::makeReportMaps(), SBRunManager::makeReportNormalEqs(), SBRunManager::makeReports(), SBRunManager::makeReportSessionStatistics(), SBRunManager::makeReportTRF(), SBRunManager::makeReportTRFVariations(), SBRunManager::makeReportTroposphere(), SBEstimator::mapContStochs4NewBatch(), SBMaster::mapFiles(), SBMaster::mapRecords(), matT_x_mat(), SBEstimator::moveGlobalInfo(), SBEstimator::moveGlobalInfo_Old(), SBFileConv::open4In(), SBFileConv::open4Out(), SBEphem::openFile(), SBVector::operator()(), SBSolidTideLd::operator()(), SBTideLd::operator()(), operator()(), SBRefraction::operator()(), SBUpperMatrix::operator()(), operator*(), operator+(), SBVector::operator+=(), operator+=(), SBUpperMatrix::operator+=(), operator-(), SBVector::operator-=(), operator-=(), SBUpperMatrix::operator-=(), SBObsVLBIEntry::operator<(), operator<<(), SBVector::operator=(), operator=(), SBUpperMatrix::operator=(), SBVLBISesInfo::operator=(), SBVector::operator==(), SBObsVLBIEntry::operator==(), SBVLBISesInfo::operator==(), operator>>(), operator~(), SBSymMatrix::operator~(), SBPlotArea::output4Files(), SBSolution::path2GlbDir(), SBSolution::path2LocDir(), SBSolution::path2StcDir(), SBEstimator::prepare4Local(), SBSite::prepareDicts(), SBVLBIPreProcess::preProcess(), SBObsVLBIEntry::process(), SBRunManager::process_m1(), SBRunManager::process_m2(), SBVLBIPreProcess::procScenario_2(), SBProjectSel::ProjectListItem::ProjectListItem(), QuadraticForm(), SBRefraction::refrDir(), SBAploEphem::registerStation(), SBInstitutionList::remove(), SBParameterList::remove(), SBStochParameterList::remove(), SBVLBISet::removeSession(), SBParameterList::report(), SBStochParameter::report(), SBBaseInfo::restoreUserInfo(), SBSourceInfo::restoreUserInfo(), SBVLBISession::restoreUserInfo(), RRT(), RTR(), SBParameter::rw(), SBPlot::save2PS(), SBVLBISet::saveSession(), SBRunManager::saveVLBISessions_m1(), SBRunManager::saveVLBISessions_m2(), SBCoordsEditor::SBCoordsEditor(), SBEstimator::SBEstimator(), SBModelEditor::SBModelEditor(), SBObsVLBIStatBrowser::SBObsVLBIStatBrowser(), SBObsVLBIStatSrc::SBObsVLBIStatSrc(), SBObsVLBIStatSta::SBObsVLBIStatSta(), SBParametersEditor::SBParametersEditor(), SBPlateMotion::SBPlateMotion(), SBPlot::SBPlot(), SBPlotDialog::SBPlotDialog(), SBProjectEdit::SBProjectEdit(), SBRunManager::SBRunManager(), SBSolution::SBSolution(), SBSolutionBrowser::SBSolutionBrowser(), SBStuffEphem::SBStuffEphem(), SBTestAPLoad::SBTestAPLoad(), SBTestDiurnEOP::SBTestDiurnEOP(), SBTestEphem::SBTestEphem(), SBTestFrame::SBTestFrame(), SBTestNutation::SBTestNutation(), SBTestOceanTides::SBTestOceanTides(), SBTestPolarTides::SBTestPolarTides(), SBTestSolidTides::SBTestSolidTides(), SBVLBINetEntryEditor::SBVLBINetEntryEditor(), SBVLBISessionEditor::SBVLBISessionEditor(), SBVector::set(), set(), SBUpperMatrix::set(), setCol(), SBUpperMatrix::setCol(), SBFCList::setDefault(), SB_TRF::setSiteName(), setVector(), SBUpperMatrix::setVector(), Solve(), SBEstimator::solveLocals(), SBObsVLBIEntry::source(), SBTestSolidTides::stationChange(), SBTestOceanTides::stationChange(), SBTestPolarTides::stationChange(), SBTestAPLoad::stationChange(), SBParameter::str4compare(), SBRunManager::stripTRF(), SBSolution::submitGlobalParameters(), SBSolution::submitLocalParameters(), SBSolution::submitStochasticParameters(), T(), SBUpperMatrix::T(), SBFileConvLI::text(), SBParameterLI::text(), SBObsVLBIStatSrcLI::text(), SBSourceListItem::text(), SBStationListItem::text(), SBObsVLBIStatStaLI::text(), SBVLBISesInfoLI::text(), SBSolutionBatchLI::text(), SBSiteListItem::text(), SBVLBISesPreProcLI::text(), SBObsVLBIStatRecordLI::text(), SBSetupDialog::SBInstLI::text(), SBBasInfoLI::text(), SBSouInfoLI::text(), SBAploEntryLI::text(), SBTestStationLI::text(), SBVLBINetworkEditor::NetworkListItem::text(), SBMasterRecBrowser::SBMRListItem::text(), SBStochParameter::update(), SBSolution::updateParameter(), SBVLBIPreProcess::updateSession(), SBParameterList::updateSolution(), SBMainWindow::UtilitiesCollectStat4Prj(), SBPlateMotion::velocity(), SBVLBIPreProcess::wAttributes(), SBSourceEditor::wCoordinates(), SBParametersEditor::wEOPParameters(), SBSolutionBrowser::wLocalEOPPars(), SBSolutionBrowser::wLocalSoPars(), SBSolutionBrowser::wLocalStPars(), SBStationEditor::wNames(), SBVLBISessionEditor::wObservs(), SBParametersEditor::wOtherParameters(), SBVLBISessionEditor::wParameters(), writeNormalEquationSystem(), SBSiteEditor::wSite(), SBParametersEditor::wSourceParameters(), SBParametersEditor::wStationParameters(), SBSolutionBrowser::wStochEOPPars(), SBSolutionBrowser::wStochSoPars(), SBSolutionBrowser::wStochStPars(), SBParametersEditor::wTestParameters(), and SBSolutionBrowser::wWRMSs()\&.
.SS "virtual unsigned int SBMatrix::nCol () const\fC [inline, virtual]\fP"Returns number of columns'\&. 
.PP
Definition at line 318 of file SbVector\&.H'\&.
.PP
References NCol\&.
.PP
Referenced by SBPlotBranch::dataAttr(), SBTestEOP::fillData4Plotting(), SBTestDiurnEOP::fillData4Plotting(), SBTestSolidTides::fillData4Plotting(), SBTestOceanTides::fillData4Plotting(), SBTestPolarTides::fillData4Plotting(), SBTestAPLoad::fillData4Plotting(), SBFilterGauss::readDataFile(), SBPlotBranch::setDataAttr(), sinex_SolutionMatrixEstimateBlock(), and sinex_SolutionNormalEquationMatrixBlock()\&.
.SS "virtual unsigned int SBMatrix::nRow () const\fC [inline, virtual]\fP"Returns number of rows'\&. 
.PP
Definition at line 316 of file SbVector\&.H'\&.
.PP
References NRow\&.
.PP
Referenced by SBTestEOP::fillData4Plotting(), SBTestDiurnEOP::fillData4Plotting(), SBTestSolidTides::fillData4Plotting(), SBTestOceanTides::fillData4Plotting(), SBTestPolarTides::fillData4Plotting(), SBTestAPLoad::fillData4Plotting(), SBPlotArea::getLimits(), makeHouseholder(), SBUpperMatrix::n(), QuadraticForm(), and SBFilterGauss::readDataFile()\&.
.SS "double & SBMatrix::operator() (unsigned inti, unsigned intj)\fC [inline, virtual]\fP"Returns reference to the (i,j)-th element'\&. 
.PP
Reimplemented in \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 449 of file SbVector\&.H'\&.
.PP
References B, ClassName(), dTmp, SBLog::ERR, Log, SBLog::MATRIX, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.SS "\fBSBMatrix\fP SBMatrix::operator* (const \fBSBSymMatrix\fP &)\fC [inline, private]\fP"
.PP
Definition at line 377 of file SbVector\&.H'\&.
.PP
References SBMatrix()\&.
.SS "\fBSBMatrix\fP & SBMatrix::operator*= (doublef)\fC [inline]\fP"Multiplies the matrix by a double'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 551 of file SbVector\&.H'\&.
.PP
References B, NCol, and NRow\&.
.SS "\fBSBMatrix\fP & SBMatrix::operator+= (const \fBSBMatrix\fP &M)\fC [inline, virtual]\fP"Adds a matrix to the matrix'\&. 
.PP
Definition at line 517 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.SS "\fBSBMatrix\fP & SBMatrix::operator-= (const \fBSBMatrix\fP &M)\fC [inline, virtual]\fP"Substracts a matrix from the matrix'\&. 
.PP
Definition at line 534 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.SS "\fBSBMatrix\fP & SBMatrix::operator/= (doublef)\fC [inline]\fP"Divides the matrix by a double'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 560 of file SbVector\&.H'\&.
.PP
References B, NCol, and NRow\&.
.SS "\fBSBMatrix\fP & SBMatrix::operator= (const \fBSBMatrix\fP &M)\fC [inline]\fP"Assign the matix to another one'\&. 
.PP
Definition at line 491 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.SS "\fBSBMatrix\fP & SBMatrix::operator= (doublef)\fC [inline, virtual]\fP"Fills the matix with the double'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 508 of file SbVector\&.H'\&.
.PP
References B, NCol, and NRow\&.
.SS "\fBSBMatrix\fP SBMatrix::operator~ ()\fC [private]\fP"Returns inversed matrix'\&. This is time consumed operation, shouldn't use in ordinary operations'\&. M*~M==~M*M==1 (original matrix doesn't change)'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP'\&.
.PP
Definition at line 85 of file SbVector\&.C'\&.
.SS "void SBMatrix::resize (unsigned intNRow_, unsigned intNCol_)"Changes the size of a matrix'\&. 
.PP
Definition at line 66 of file SbVector\&.C'\&.
.PP
References B, dTmp, NCol, and NRow\&.
.PP
Referenced by SBTestEOP::fillData4Plotting(), SBTestDiurnEOP::fillData4Plotting(), SBTestSolidTides::fillData4Plotting(), SBTestOceanTides::fillData4Plotting(), SBTestPolarTides::fillData4Plotting(), SBTestAPLoad::fillData4Plotting(), and SBEOP::setPtNum()\&.
.SS "void SBMatrix::set (unsigned inti, unsigned intj, doubleA_)\fC [inline, virtual]\fP"Sets the (i,j)-th element to the double'\&. 
.PP
Reimplemented in \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 477 of file SbVector\&.H'\&.
.PP
References B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.PP
Referenced by SBSolutionBrowser::batch4StochEOPChanged(), SBSolutionBrowser::batch4StochSoChanged(), SBSolutionBrowser::batch4StochStChanged(), SBMEM::calcA_LSBackward(), SBMEM::calcA_LSFnB(), SBMEM::calcA_LSForward(), SBFilterGauss::calcSigma(), SBEstimator::collectContStochs4NextBatch(), SBTestEOP::fillData4Plotting(), SBTestDiurnEOP::fillData4Plotting(), SBTestSolidTides::fillData4Plotting(), SBTestOceanTides::fillData4Plotting(), SBTestPolarTides::fillData4Plotting(), SBTestAPLoad::fillData4Plotting(), SBVLBIPreProcess::fillObsListView(), SBAploEphem::getReady(), SBEstimator::mapContStochs4NewBatch(), SBEstimator::moveGlobalInfo(), SBEOP::prepare4Date(), SBEstimator::processConstr(), SBEstimator::processGlobalConstr(), SBEstimator::processObs(), SBEstimator::propagateStochasticPars(), SBFilteringGauss::redrawDataPlot(), SBSpectrumAnalyserMEM::redrawDataPlot(), SBFilteringGauss::redrawDataPlot_ExpMode(), SBSpectrumAnalyserMEM::redrawFPEPlot(), SBSpectrumAnalyserMEM::redrawSpectrumPlot(), SBFilteringGauss::redrawTFPlot(), SBPlotBranch::setDataAttr(), SBFilteringGauss::wBrowseTF(), SBSolutionBrowser::wLocalEOPPars(), SBSolutionBrowser::wLocalSoPars(), SBSolutionBrowser::wLocalStPars(), SBVLBISessionEditor::wObservs(), writeNormalEquationSystem(), and SBSolutionBrowser::wWRMSs()\&.
.SS "\fBSBMatrix\fP & SBMatrix::setCol (unsigned intN_, const \fBSBVector\fP &V)\fC [inline]\fP"Sets i-th column to a Vector'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 579 of file SbVector\&.H'\&.
.PP
References SBVector::B, B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBVector::N, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.SS "void SBNamed::setName (const QString &Name_)\fC [inline, inherited]\fP"
.PP
Definition at line 216 of file SbGeo\&.H'\&.
.PP
References SBNamed::Name\&.
.PP
Referenced by SBVLBINetEntryEditor::accept(), SBSourceEditor::acquireData(), SBSiteEditor::acquireData(), SBStationEditor::acquireData(), SBObsVLBIStatistics::collectStatistics(), SBVLBIPreProcess::currentSesChange(), SBVLBISet::import(), SBVLBISet::loadSession(), SBVLBISesInfo::operator=(), operator>>(), SBPlotArea::output4Files(), SBFilteringGauss::redrawDataPlot_ExpMode(), SBBaseInfoList::restoreUserInfo(), SBSourceInfoList::restoreUserInfo(), SBMasterRecord::SBMasterRecord(), SBSolution::SBSolution(), SB_TRF::setSiteName(), SBTestSolidTides::stationChange(), SBTestOceanTides::stationChange(), SBTestPolarTides::stationChange(), SBTestAPLoad::stationChange(), and SBVLBIPreProcess::updateSession()\&.
.SS "\fBSBVector\fP & SBMatrix::setVector (unsigned intN_, \fBSBVector\fP &V)\fC [inline]\fP"Assign to the vector the values of matrix'es column'\&. 
.PP
Reimplemented in \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 594 of file SbVector\&.H'\&.
.PP
References SBVector::B, B, ClassName(), SBLog::ERR, Log, SBLog::MATRIX, SBVector::N, SBNamed::name(), NCol, NRow, and SBLog::write()\&.
.SS "\fBSBMatrix\fP SBMatrix::T ()\fC [inline, virtual]\fP"Returns transposed matrix (original matrix doesn't change)'\&. 
.PP
Reimplemented in \fBSBSymMatrix\fP, and \fBSBUpperMatrix\fP'\&.
.PP
Definition at line 569 of file SbVector\&.H'\&.
.PP
References B, SBNamed::name(), NCol, and NRow\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "int cmp (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP, returns (-1:0:+1)'\&. 
.PP
Definition at line 253 of file SbGeo\&.H'\&.
.PP
Referenced by SBStochParameterList::compareItems(), and SBMasterFile::compareItems()\&.
.SS "\fBSBMatrix\fP matT_x_mat (const \fBSBMatrix\fP &M1, const \fBSBMatrix\fP &M2)\fC [friend]\fP"Returns a product of a transposed matrix and a matrix'\&. This function is equal to `M1'\&.\fBT()\fP*M2', but implements a more efficient realization'\&. 
.PP
Definition at line 116 of file SbVector\&.C'\&.
.SS "\fBSBVector\fP matT_x_vec (const \fBSBMatrix\fP &M, const \fBSBVector\fP &V)\fC [friend]\fP"Returns a product of a transposed matrix and a vector'\&. This function is equal to `M'\&.\fBT()\fP*V', but implements a more efficient realization'\&. 
.PP
Definition at line 419 of file SbVector\&.C'\&.
.SS "bool operator!= (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 238 of file SbGeo\&.H'\&.
.SS "\fBSBMatrix\fP operator* (const \fBSBMatrix\fP &M, doublef)\fC [friend]\fP"Returns matrix multiplied by float'\&. 
.PP
Definition at line 356 of file SbVector\&.H'\&.
.SS "\fBSBMatrix\fP operator* (doublef, const \fBSBMatrix\fP &M)\fC [friend]\fP"Returns matrix multiplied by float'\&. 
.PP
Definition at line 358 of file SbVector\&.H'\&.
.SS "\fBSBMatrix\fP operator* (const \fBSBMatrix\fP &M1, const \fBSBMatrix\fP &M2)\fC [friend]\fP"Returns product of two matrices'\&. 
.PP
Definition at line 98 of file SbVector\&.C'\&.
.SS "\fBSBVector\fP operator* (const \fBSBMatrix\fP &M, const \fBSBVector\fP &V)\fC [friend]\fP"Returns a product of a matrix and a vector'\&. 
.PP
Definition at line 397 of file SbVector\&.C'\&.
.SS "\fBSBMatrix\fP operator+ (const \fBSBMatrix\fP &M1, const \fBSBMatrix\fP &M2)\fC [friend]\fP"Returns a sum of two matrices'\&. 
.PP
Definition at line 1133 of file SbVector\&.H'\&.
.SS "\fBSBMatrix\fP operator- (const \fBSBMatrix\fP &M)\fC [friend]\fP"Returns matrix with reversed sign'\&. 
.PP
Definition at line 360 of file SbVector\&.H'\&.
.SS "\fBSBMatrix\fP operator- (const \fBSBMatrix\fP &M1, const \fBSBMatrix\fP &M2)\fC [friend]\fP"Returns a difference of two matrices'\&. 
.PP
Definition at line 1146 of file SbVector\&.H'\&.
.SS "\fBSBMatrix\fP operator/ (const \fBSBMatrix\fP &M, doublef)\fC [friend]\fP"Returns matrix divided by float'\&. 
.PP
Definition at line 354 of file SbVector\&.H'\&.
.SS "bool operator< (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 243 of file SbGeo\&.H'\&.
.SS "QDataStream & operator<< (QDataStream &s, const \fBSBNamed\fP &W)\fC [friend, inherited]\fP"Saves object to the data stream'\&. 
.PP
Definition at line 258 of file SbGeo\&.H'\&.
.SS "QDataStream& operator<< (QDataStream &s, const \fBSBMatrix\fP &M)\fC [friend]\fP"
.PP
Definition at line 135 of file SbVector\&.C'\&.
.SS "bool operator== (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 233 of file SbGeo\&.H'\&.
.SS "bool operator> (const \fBSBNamed\fP &N1, const \fBSBNamed\fP &N2)\fC [friend, inherited]\fP"Compares two instances of \fBSBNamed\fP'\&. 
.PP
Definition at line 248 of file SbGeo\&.H'\&.
.SS "QDataStream & operator>> (QDataStream &s, \fBSBNamed\fP &W)\fC [friend, inherited]\fP"Loads object from the data stream'\&. 
.PP
Definition at line 263 of file SbGeo\&.H'\&.
.SS "QDataStream& operator>> (QDataStream &s, \fBSBMatrix\fP &M)\fC [friend]\fP"
.PP
Definition at line 143 of file SbVector\&.C'\&.
.SS "\fBSBSymMatrix\fP QuadraticForm (const \fBSBSymMatrix\fP &P, const \fBSBMatrix\fP &A)\fC [friend]\fP"
.PP
Reimplemented in \fBSBSymMatrix\fP'\&.
.PP
Definition at line 468 of file SbVector\&.C'\&.
.SS "friend class \fBSBUpperMatrix\fP\fC [friend]\fP"
.PP
Definition at line 278 of file SbVector\&.H'\&.
.SH "Member Data Documentation"
.PP 
.SS "double** \fBSBMatrix::B\fP\fC [protected]\fP"
.PP
Definition at line 282 of file SbVector\&.H'\&.
.PP
Referenced by at(), SBUpperMatrix::at(), SBSymMatrix::at(), clear(), SBUpperMatrix::clear(), matT_x_mat(), operator()(), SBUpperMatrix::operator()(), operator*(), operator*=(), SBUpperMatrix::operator*=(), operator+=(), SBUpperMatrix::operator+=(), operator-=(), SBUpperMatrix::operator-=(), operator/=(), SBUpperMatrix::operator/=(), operator<<(), operator=(), SBUpperMatrix::operator=(), operator>>(), resize(), SBMatrix(), SBSymMatrix::SBSymMatrix(), SBUpperMatrix::SBUpperMatrix(), set(), SBUpperMatrix::set(), setCol(), SBUpperMatrix::setCol(), setVector(), SBUpperMatrix::setVector(), T(), SBUpperMatrix::T(), ~SBMatrix(), and SBUpperMatrix::~SBUpperMatrix()\&.
.SS "double \fBSBMatrix::dTmp\fP\fC [protected]\fP"
.PP
Definition at line 283 of file SbVector\&.H'\&.
.PP
Referenced by operator()(), SBUpperMatrix::operator()(), resize(), SBMatrix(), SBSymMatrix::SBSymMatrix(), and SBUpperMatrix::SBUpperMatrix()\&.
.SS "QString \fBSBNamed::Name\fP\fC [protected, inherited]\fP"
.PP
Definition at line 206 of file SbGeo\&.H'\&.
.PP
Referenced by SBVLBISesInfo::fileName(), SBNamed::name(), operator<<(), SBNamed::operator=(), SBStation::operator=(), SBSite::operator=(), SBOLoadCarrier::operator==(), operator>>(), SBStochParameter::report(), SBNamed::SBNamed(), SBNamed::setName(), SBSite::updateSite(), and SBStation::updateStation()\&.
.SS "unsigned int \fBSBMatrix::NCol\fP\fC [protected]\fP"
.PP
Definition at line 281 of file SbVector\&.H'\&.
.PP
Referenced by at(), SBUpperMatrix::at(), SBSymMatrix::at(), clear(), SBUpperMatrix::clear(), matT_x_mat(), nCol(), operator()(), SBUpperMatrix::operator()(), operator*(), operator*=(), SBUpperMatrix::operator*=(), operator+(), operator+=(), SBUpperMatrix::operator+=(), operator-(), operator-=(), SBUpperMatrix::operator-=(), operator/=(), SBUpperMatrix::operator/=(), operator<<(), operator=(), SBUpperMatrix::operator=(), operator>>(), QuadraticForm(), resize(), RRT(), RTR(), SBMatrix(), SBSymMatrix::SBSymMatrix(), SBUpperMatrix::SBUpperMatrix(), set(), SBUpperMatrix::set(), setCol(), SBUpperMatrix::setCol(), setVector(), SBUpperMatrix::setVector(), T(), SBUpperMatrix::T(), ~SBMatrix(), and SBUpperMatrix::~SBUpperMatrix()\&.
.SS "unsigned int \fBSBMatrix::NRow\fP\fC [protected]\fP"
.PP
Definition at line 280 of file SbVector\&.H'\&.
.PP
Referenced by at(), SBUpperMatrix::at(), SBSymMatrix::at(), clear(), matT_x_mat(), nRow(), operator()(), SBUpperMatrix::operator()(), operator*(), operator*=(), operator+(), operator+=(), SBUpperMatrix::operator+=(), operator-(), operator-=(), SBUpperMatrix::operator-=(), operator/=(), operator<<(), operator=(), SBUpperMatrix::operator=(), operator>>(), QuadraticForm(), resize(), RRT(), RTR(), SBMatrix(), SBSymMatrix::SBSymMatrix(), SBUpperMatrix::SBUpperMatrix(), set(), SBUpperMatrix::set(), setCol(), SBUpperMatrix::setCol(), setVector(), SBUpperMatrix::setVector(), Solve(), T(), and SBUpperMatrix::T()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
