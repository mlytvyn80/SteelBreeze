.TH "SBRotate" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SBRotate \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbGeoRefFrame\&.H>\fP
.PP
Inherits \fBRotMatrix\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSBRotate\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.ti -1c
.RI "virtual \fBRotDerMatrix\fP & \fBdRdt\fP ()"
.br
.ti -1c
.RI "virtual const \fBMatrix3\fP & \fBoperator()\fP (double)"
.br
.ti -1c
.RI "virtual double & \fBoperator()\fP (\fBDIRECTION\fP i, \fBDIRECTION\fP j)"
.br
.ti -1c
.RI "virtual double \fBangle\fP () const "
.br
.ti -1c
.RI "virtual \fBDIRECTION\fP \fBaxis\fP () const "
.br
.ti -1c
.RI "virtual double \fBat\fP (\fBDIRECTION\fP i, \fBDIRECTION\fP j) const "
.br
.ti -1c
.RI "virtual void \fBreport2Log\fP (\fBSBLog::LogLevel\fP, uint, const QString &) const "
.br
.ti -1c
.RI "virtual double \fBmodule\fP () const "
.br
.ti -1c
.RI "virtual void \fBunify\fP ()"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBT\fP () const "
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator+=\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator-=\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator*=\fP (double)"
.br
.ti -1c
.RI "\fBMatrix3\fP & \fBoperator/=\fP (double)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "double \fBAngle\fP"
.br
.ti -1c
.RI "double \fBsa\fP"
.br
.ti -1c
.RI "double \fBca\fP"
.br
.ti -1c
.RI "\fBDIRECTION\fP \fBAxis\fP"
.br
.ti -1c
.RI "double \fBmat\fP [3][3]"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBRotDerMatrix\fP \fBDRdt\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBMatrix3\fP \fBoperator+\fP (const \fBMatrix3\fP &, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator-\fP (const \fBMatrix3\fP &, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator-\fP (const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator/\fP (const \fBMatrix3\fP &, double)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator*\fP (const \fBMatrix3\fP &, double)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator*\fP (double, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator*\fP (const \fBMatrix3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator*\fP (const \fBMatrix3\fP &, const \fBMatrix3\fP &)"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBoperator~\fP (const \fBMatrix3\fP &)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Earth rotation matrix (general)'\&. Matrix describes Earth rotation'\&. 
.PP
Definition at line 591 of file SbGeoRefFrame\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SBRotate::SBRotate ()\fC [inline]\fP"A constructor'\&. 
.PP
Definition at line 597 of file SbGeoRefFrame\&.H'\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual double RotMatrix::angle () const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 183 of file SbVector3\&.H'\&.
.PP
References RotMatrix::Angle\&.
.PP
Referenced by SBFrameClassic::calc(), SBPrec_IAU1976::operator()(), SBPrec_IAU2000::operator()(), SBNut_IAU1980::operator()(), SBNut_IAU2000::operator()(), and SBPolus::operator()()\&.
.SS "virtual double Matrix3::at (\fBDIRECTION\fPi, \fBDIRECTION\fPj) const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 139 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.PP
Referenced by SBTestMatrix::createMatrixWidget(), SBTestMatrix::displayValues(), and SBRunManager::makeReportTRFVariations()\&.
.SS "virtual \fBDIRECTION\fP RotMatrix::axis () const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 184 of file SbVector3\&.H'\&.
.PP
References RotMatrix::Axis\&.
.SS "virtual QString SBRotate::ClassName () const\fC [inline, virtual]\fP"Refers to a class name (debug info) 
.PP
Reimplemented from \fBRotMatrix\fP'\&.
.PP
Definition at line 599 of file SbGeoRefFrame\&.H'\&.
.SS "virtual \fBRotDerMatrix\fP& SBRotate::dRdt ()\fC [inline, virtual]\fP"
.PP
Definition at line 600 of file SbGeoRefFrame\&.H'\&.
.PP
References DRdt\&.
.PP
Referenced by SBFrameClassic::calc(), SBFrameNRO::calc(), and SBFrameClassic::dQ_dpsi()\&.
.SS "double Matrix3::module () const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 410 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.PP
Referenced by operator~(), and Matrix3::unify()\&.
.SS "virtual double& Matrix3::operator() (\fBDIRECTION\fPi, \fBDIRECTION\fPj)\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 138 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.SS "const \fBMatrix3\fP & RotMatrix::operator() (doubleAngle_)\fC [virtual, inherited]\fP"
.PP
Reimplemented in \fBRot2DerMatrix\fP, and \fBRotDerMatrix\fP'\&.
.PP
Definition at line 139 of file SbVector3\&.C'\&.
.PP
References RotMatrix::Angle, RotMatrix::Axis, RotMatrix::ca, Matrix3::mat, RotMatrix::sa, X_AXIS, Y_AXIS, and Z_AXIS\&.
.SS "\fBMatrix3\fP & Matrix3::operator*= (doublev)\fC [inline, inherited]\fP"
.PP
Definition at line 394 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator+= (const \fBMatrix3\fP &M)\fC [inline, inherited]\fP"
.PP
Definition at line 378 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator-= (const \fBMatrix3\fP &M)\fC [inline, inherited]\fP"
.PP
Definition at line 386 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.SS "\fBMatrix3\fP & Matrix3::operator/= (doublev)\fC [inline, inherited]\fP"
.PP
Definition at line 402 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat\&.
.PP
Referenced by Matrix3::unify()\&.
.SS "void Matrix3::report2Log (\fBSBLog::LogLevel\fPLev, uintFac, const QString &Pref) const\fC [virtual, inherited]\fP"
.PP
Definition at line 76 of file SbVector3\&.C'\&.
.PP
References Log, Matrix3::mat, and SBLog::write()\&.
.PP
Referenced by SBFrameClassic::calc(), SBSolidTideLd::operator()(), SBPrec_IAU1976::operator()(), SBPrec_IAU2000::operator()(), SBNut_IAU1980::operator()(), SBNut_IAU2000::operator()(), and SBPolus::operator()()\&.
.SS "\fBMatrix3\fP Matrix3::T () const\fC [inline, inherited]\fP"Returns transposed matrix (original matrix does'n change)'\&. 
.PP
Definition at line 418 of file SbVector3\&.H'\&.
.PP
References Matrix3::mat, and Matrix3::Matrix3()\&.
.PP
Referenced by SBDelay::calcDerivatives()\&.
.SS "virtual void Matrix3::unify ()\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 142 of file SbVector3\&.H'\&.
.PP
References Matrix3::module(), and Matrix3::operator/=()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBMatrix3\fP operator* (const \fBMatrix3\fP &M1, doublev2)\fC [friend, inherited]\fP"
.PP
Definition at line 493 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator* (doublev1, const \fBMatrix3\fP &M2)\fC [friend, inherited]\fP"
.PP
Definition at line 502 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator* (const \fBMatrix3\fP &, const \fBVector3\fP &)\fC [friend, inherited]\fP"
.SS "\fBMatrix3\fP operator* (const \fBMatrix3\fP &M1, const \fBMatrix3\fP &M2)\fC [friend, inherited]\fP"
.PP
Definition at line 59 of file SbVector3\&.C'\&.
.SS "\fBMatrix3\fP operator+ (const \fBMatrix3\fP &M1, const \fBMatrix3\fP &M2)\fC [friend, inherited]\fP"
.PP
Definition at line 450 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator- (const \fBMatrix3\fP &M1, const \fBMatrix3\fP &M2)\fC [friend, inherited]\fP"
.PP
Definition at line 467 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator- (const \fBMatrix3\fP &M1)\fC [friend, inherited]\fP"
.PP
Definition at line 433 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator/ (const \fBMatrix3\fP &M1, doublev2)\fC [friend, inherited]\fP"
.PP
Definition at line 484 of file SbVector3\&.H'\&.
.SS "\fBMatrix3\fP operator~ (const \fBMatrix3\fP &M1)\fC [friend, inherited]\fP"Returns inversed matrix: A*~A=~A*A=1 (original matrix does'n change)'\&. 
.PP
Definition at line 95 of file SbVector3\&.C'\&.
.SH "Member Data Documentation"
.PP 
.SS "double \fBRotMatrix::Angle\fP\fC [protected, inherited]\fP"
.PP
Definition at line 175 of file SbVector3\&.H'\&.
.PP
Referenced by RotMatrix::angle(), RotMatrix::operator()(), RotDerMatrix::operator()(), Rot2DerMatrix::operator()(), and RotMatrix::RotMatrix()\&.
.SS "\fBDIRECTION\fP \fBRotMatrix::Axis\fP\fC [protected, inherited]\fP"
.PP
Definition at line 176 of file SbVector3\&.H'\&.
.PP
Referenced by RotMatrix::axis(), RotMatrix::operator()(), RotDerMatrix::operator()(), Rot2DerMatrix::operator()(), and RotMatrix::RotMatrix()\&.
.SS "double \fBRotMatrix::ca\fP\fC [protected, inherited]\fP"
.PP
Definition at line 175 of file SbVector3\&.H'\&.
.PP
Referenced by RotMatrix::operator()(), RotDerMatrix::operator()(), and Rot2DerMatrix::operator()()\&.
.SS "\fBRotDerMatrix\fP \fBSBRotate::DRdt\fP\fC [private]\fP"
.PP
Definition at line 594 of file SbGeoRefFrame\&.H'\&.
.PP
Referenced by dRdt()\&.
.SS "double \fBMatrix3::mat\fP[3][3]\fC [protected, inherited]\fP"
.PP
Definition at line 120 of file SbVector3\&.H'\&.
.PP
Referenced by Matrix3::at(), Matrix3::Matrix3(), Matrix3::module(), Matrix3::operator()(), RotMatrix::operator()(), RotDerMatrix::operator()(), Rot2DerMatrix::operator()(), SBNut_IAU1980::operator()(), SBNut_IAU2000::operator()(), operator*(), Matrix3::operator*=(), operator+(), Matrix3::operator+=(), operator-(), Matrix3::operator-=(), operator/(), Matrix3::operator/=(), Matrix3::operator=(), operator~(), Matrix3::report2Log(), and Matrix3::T()\&.
.SS "double \fBRotMatrix::sa\fP\fC [protected, inherited]\fP"
.PP
Definition at line 175 of file SbVector3\&.H'\&.
.PP
Referenced by RotMatrix::operator()(), RotDerMatrix::operator()(), and Rot2DerMatrix::operator()()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
