.TH "Vector3" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vector3 \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbVector3\&.H>\fP
.PP
Inherited by \fBSBOceanTideLd\fP, \fBSBPolarTideLd\fP, \fBSBSolidTideLd\fP, and \fBSBTideLd\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVector3\fP ()"
.br
.ti -1c
.RI "\fBVector3\fP (double v1, double v2, double v3)"
.br
.ti -1c
.RI "\fBVector3\fP (const \fBVector3\fP &V)"
.br
.ti -1c
.RI "virtual \fB~Vector3\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.ti -1c
.RI "double & \fBoperator[]\fP (\fBDIRECTION\fP i)"
.br
.ti -1c
.RI "double \fBat\fP (\fBDIRECTION\fP i) const "
.br
.ti -1c
.RI "double \fBmodule\fP () const "
.br
.ti -1c
.RI "double \fBphi\fP () const "
.br
.ti -1c
.RI "double \fBlambda\fP () const "
.br
.ti -1c
.RI "\fBVector3\fP & \fBunify\fP ()"
.br
.ti -1c
.RI "\fBVector3\fP \fBunit\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "\fBVector3\fP & \fBoperator=\fP (const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP & \fBoperator+=\fP (const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP & \fBoperator-=\fP (const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP & \fBoperator*=\fP (double)"
.br
.ti -1c
.RI "\fBVector3\fP & \fBoperator/=\fP (double)"
.br
.ti -1c
.RI "virtual void \fBreport2Log\fP (\fBSBLog::LogLevel\fP, uint, const QString &, int, int, double=1\&.0) const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBVector3\fP &v) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBVector3\fP &v) const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "double \fBvec\fP [3]"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBVector3\fP \fBoperator-\fP (const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator+\fP (const \fBVector3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator-\fP (const \fBVector3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator/\fP (const \fBVector3\fP &, double)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator*\fP (const \fBVector3\fP &, double)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator*\fP (double, const \fBVector3\fP &)"
.br
.ti -1c
.RI "double \fBoperator*\fP (const \fBVector3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator%\fP (const \fBVector3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "\fBVector3\fP \fBoperator*\fP (const \fBMatrix3\fP &, const \fBVector3\fP &)"
.br
.ti -1c
.RI "QDataStream & \fBoperator<<\fP (QDataStream &s, const \fBVector3\fP &v)"
.br
.ti -1c
.RI "QDataStream & \fBoperator>>\fP (QDataStream &s, \fBVector3\fP &v)"
.br
.in -1c
.SH "Detailed Description"
.PP 
3d vector'\&. 
.PP
Definition at line 50 of file SbVector3\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Vector3::Vector3 ()\fC [inline]\fP"A constructor'\&. Creates a copy of object'\&. 
.PP
Definition at line 60 of file SbVector3\&.H'\&.
.PP
References vec\&.
.PP
Referenced by SBSolidTideLdIERS96::deg2OutPhase(), SBSolidTideLdIERS96::latDepend(), SBSolidTideLd::makeStep2(), SBSolidTideLdIERS96::makeStep2(), SBSolidTideLd::permTide(), SBSolidTideLdIERS96::permTide(), and unit()\&.
.SS "Vector3::Vector3 (doublev1, doublev2, doublev3)\fC [inline]\fP"
.PP
Definition at line 61 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "Vector3::Vector3 (const \fBVector3\fP &V)\fC [inline]\fP"A constructor'\&. Creates a copy of object'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIV\fP values of the new object'\&. 
.RE
.PP

.PP
Definition at line 66 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "virtual Vector3::~Vector3 ()\fC [inline, virtual]\fP"A destructor'\&. 
.PP
Definition at line 68 of file SbVector3\&.H'\&.
.SH "Member Function Documentation"
.PP 
.SS "double Vector3::at (\fBDIRECTION\fPi) const\fC [inline]\fP"
.PP
Definition at line 72 of file SbVector3\&.H'\&.
.PP
References vec\&.
.PP
Referenced by SBStationEditor::acquireData(), SBDelay::calc(), SBDelay::calcDerivatives(), collectListOfSINEXParameters(), collectListOfSINEXParameters4NEQ(), SBRunManager::constraintStationCoord(), SBRunManager::constraintStationVeloc(), SBTestEphem::createWidget4Test(), SBPlateMotion::displacement(), SBTestEphem::displayCoo(), SBTestAPLoad::fillData4Plotting(), SBEccListItem::key(), SBCoordsListItem::key(), SBRunManager::makeReportMaps(), Matrix3::Matrix3(), operator<<(), SB_TRF::prepareEccs4Session(), SBRefraction::refrDir(), SBStationEcc::registerEcc(), SBCoordsEditor::SBCoordsEditor(), sinex_SiteEccentricityBlock(), sinex_tro_StaCoordinatesBlock(), SBEccListItem::text(), SBCoordsListItem::text(), SBPlateEntry::velocity(), SBPlateMotion::velocity(), SBStationEditor::wCoordinates(), and SBSiteEditor::wSite()\&.
.SS "virtual QString Vector3::ClassName () const\fC [inline, virtual]\fP"Refers to a class name (debug info) 
.PP
Reimplemented in \fBSBTideLd\fP, \fBSBSolidTideLdIERS96\fP, \fBSBSolidTideLdIERS92\fP, \fBSBSolidTideLd\fP, \fBSBPolarTideLd\fP, and \fBSBOceanTideLd\fP'\&.
.PP
Definition at line 70 of file SbVector3\&.H'\&.
.SS "void Vector3::clear ()\fC [inline]\fP"
.PP
Definition at line 79 of file SbVector3\&.H'\&.
.PP
References vec\&.
.PP
Referenced by SBDelay::calc(), SBOceanTideLd::operator()(), SBPolarTideLd::operator()(), and SBSolidTideLd::operator()()\&.
.SS "double Vector3::lambda () const\fC [inline]\fP"
.PP
Definition at line 75 of file SbVector3\&.H'\&.
.PP
References module(), and vec\&.
.PP
Referenced by SBSolidTideLdIERS96::deg2OutPhase(), SBTestEphem::displayCoo(), SBSolidTideLdIERS96::latDepend(), SBSolidTideLdIERS96::makeStep2(), and SBSolidTideLd::operator()()\&.
.SS "double Vector3::module () const\fC [inline]\fP"
.PP
Definition at line 73 of file SbVector3\&.H'\&.
.PP
References vec\&.
.PP
Referenced by SBDelay::calc(), SBSolidTideLd::deg2InPhase(), SBSolidTideLdIERS96::deg2OutPhase(), SBSolidTideLdIERS96::deg3InPhase(), SBTestEphem::displayCoo(), SBSolidTideLd::dTide_dH2(), SBSolidTideLd::dTide_dL2(), SBSolidTideLd::dTide_dLag(), SBStationImport::importITRF(), lambda(), SBSolidTideLdIERS96::latDepend(), SBRunManager::makeReportMaps(), SBSolidTideLd::makeStep1(), phi(), report2Log(), unify(), and unit()\&.
.SS "bool Vector3::operator!= (const \fBVector3\fP &v) const\fC [inline]\fP"
.PP
Definition at line 102 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP & Vector3::operator*= (doublev)\fC [inline]\fP"
.PP
Definition at line 247 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "\fBVector3\fP & Vector3::operator+= (const \fBVector3\fP &V)\fC [inline]\fP"
.PP
Definition at line 235 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "\fBVector3\fP & Vector3::operator-= (const \fBVector3\fP &V)\fC [inline]\fP"
.PP
Definition at line 241 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "\fBVector3\fP & Vector3::operator/= (doublev)\fC [inline]\fP"
.PP
Definition at line 253 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "\fBVector3\fP & Vector3::operator= (const \fBVector3\fP &V)\fC [inline]\fP"
.PP
Definition at line 229 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "bool Vector3::operator== (const \fBVector3\fP &v) const\fC [inline]\fP"
.PP
Definition at line 100 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "double& Vector3::operator[] (\fBDIRECTION\fPi)\fC [inline]\fP"
.PP
Definition at line 71 of file SbVector3\&.H'\&.
.PP
References vec\&.
.SS "double Vector3::phi () const\fC [inline]\fP"
.PP
Definition at line 74 of file SbVector3\&.H'\&.
.PP
References module(), and vec\&.
.PP
Referenced by SBSolidTideLd::deg2InPhase(), SBSolidTideLdIERS96::deg2OutPhase(), SBTestEphem::displayCoo(), SBSolidTideLd::dTide_dLag(), SBSolidTideLdIERS96::latDepend(), SBSolidTideLdIERS96::makeStep2(), SBSolidTideLd::operator()(), SBSolidTideLd::permTide(), and SBSolidTideLdIERS96::permTide()\&.
.SS "void Vector3::report2Log (\fBSBLog::LogLevel\fPLev, uintFac, const QString &Pref, intw_, intd_, doubleScale = \fC1\&.0\fP) const\fC [virtual]\fP"
.PP
Definition at line 39 of file SbVector3\&.C'\&.
.PP
References Log, module(), vec, and SBLog::write()\&.
.PP
Referenced by SBStation::axisOffsetLenght(), SBDelay::calc(), SBEphem::calc(), SBAploEphem::displacement(), SBSolidTideLd::operator()(), SBTideLd::operator()(), and SBRefraction::operator()()\&.
.SS "\fBVector3\fP& Vector3::unify ()\fC [inline]\fP"
.PP
Definition at line 77 of file SbVector3\&.H'\&.
.PP
References module()\&.
.PP
Referenced by SBDelay::calc(), SBSolidTideLd::deg2InPhase(), SBSolidTideLdIERS96::deg3InPhase(), and SBSolidTideLdIERS96::latDepend()\&.
.SS "\fBVector3\fP Vector3::unit () const\fC [inline]\fP"
.PP
Definition at line 78 of file SbVector3\&.H'\&.
.PP
References module(), and Vector3()\&.
.PP
Referenced by SBDelay::calc(), SBRunManager::constraintStationVeloc(), SBSolidTideLd::dTide_dH2(), and SBSolidTideLd::dTide_dL2()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBVector3\fP operator% (const \fBVector3\fP &V1, const \fBVector3\fP &V2)\fC [friend]\fP"makes a vector product of two vectors (because '%' has a priority of '*')
.PP
makes vector product of two vectors'\&. 
.PP
Definition at line 326 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator* (const \fBVector3\fP &V1, doublev2)\fC [friend]\fP"multiplies vector by scalar'\&. 
.PP
Definition at line 302 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator* (doublev1, const \fBVector3\fP &V2)\fC [friend]\fP"multiplies vector by scalar'\&. 
.PP
Definition at line 310 of file SbVector3\&.H'\&.
.SS "double operator* (const \fBVector3\fP &V1, const \fBVector3\fP &V2)\fC [friend]\fP"makes a scalar product of two vectors
.PP
makes scalar product of two vectors'\&. 
.PP
Definition at line 318 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator* (const \fBMatrix3\fP &M, const \fBVector3\fP &V)\fC [friend]\fP"makes a product of matrix and vector
.PP
\fBMatrix3\fP makes product of matrix and vector'\&. 
.PP
Definition at line 519 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator+ (const \fBVector3\fP &V1, const \fBVector3\fP &V2)\fC [friend]\fP"
.PP
Definition at line 278 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator- (const \fBVector3\fP &V)\fC [friend]\fP"
.PP
Definition at line 270 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator- (const \fBVector3\fP &V1, const \fBVector3\fP &V2)\fC [friend]\fP"
.PP
Definition at line 286 of file SbVector3\&.H'\&.
.SS "\fBVector3\fP operator/ (const \fBVector3\fP &V1, doublev2)\fC [friend]\fP"
.PP
Definition at line 294 of file SbVector3\&.H'\&.
.SS "QDataStream& operator<< (QDataStream &s, const \fBVector3\fP &v)\fC [friend]\fP"
.PP
Definition at line 103 of file SbVector3\&.H'\&.
.SS "QDataStream& operator>> (QDataStream &s, \fBVector3\fP &v)\fC [friend]\fP"
.PP
Definition at line 105 of file SbVector3\&.H'\&.
.SH "Member Data Documentation"
.PP 
.SS "double \fBVector3::vec\fP[3]\fC [protected]\fP"
.PP
Definition at line 53 of file SbVector3\&.H'\&.
.PP
Referenced by at(), clear(), lambda(), module(), SBOceanTideLd::operator()(), SBPolarTideLd::operator()(), operator*=(), operator+=(), operator-=(), operator/=(), operator=(), operator==(), operator[](), phi(), report2Log(), and Vector3()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
