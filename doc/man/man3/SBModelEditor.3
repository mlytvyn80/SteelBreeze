.TH "SBModelEditor" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SBModelEditor \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbIProject\&.H>\fP
.PP
Inherits \fBSBTabDialog\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSBModelEditor\fP (\fBSBConfig\fP *, \fBQWidget\fP *=0, const char *=0, bool=FALSE, WFlags=0)"
.br
.ti -1c
.RI "virtual \fB~SBModelEditor\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.in -1c
.SS "Protected Slots"

.in +1c
.ti -1c
.RI "virtual void \fBmakeApply\fP ()"
.br
.ti -1c
.RI "virtual void \fBmakeDefault\fP ()"
.br
.ti -1c
.RI "void \fBsolidTideIERS92\fP (bool)"
.br
.ti -1c
.RI "virtual void \fBmakeDefaults\fP ()"
.br
.ti -1c
.RI "virtual void \fBdone\fP (int r)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBcloseEvent\fP (QCloseEvent *)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBacquireData\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwSysTransform\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwLightPropagation\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwSolidTide\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwEOPs\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwNutation\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwPlateMotion\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwRefraction\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwDataProcessing\fP ()"
.br
.ti -1c
.RI "\fBQWidget\fP * \fBwSolutionReports\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBSBConfig\fP * \fBCfg\fP"
.br
.ti -1c
.RI "\fBSBProject\fP * \fBProject\fP"
.br
.ti -1c
.RI "bool \fBisModified\fP"
.br
.ti -1c
.RI "bool \fBisGlobal\fP"
.br
.ti -1c
.RI "QString \fBStr\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbSysTransform\fP [2]"
.br
.ti -1c
.RI "QCheckBox * \fBcbUseAltStations\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbUseAltSources\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbUseAltEOPs\fP"
.br
.ti -1c
.RI "QLineEdit * \fBleAltStations\fP"
.br
.ti -1c
.RI "QLineEdit * \fBleAltSources\fP"
.br
.ti -1c
.RI "QLineEdit * \fBleAltEOPs\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbEphem\fP [3]"
.br
.ti -1c
.RI "QCheckBox * \fBcbIsHO\fP"
.br
.ti -1c
.RI "QLineEdit * \fBleHOThreshold\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbBody\fP [11]"
.br
.ti -1c
.RI "QGroupBox * \fBgbSTIERS96\fP"
.br
.ti -1c
.RI "QButtonGroup * \fBbgSTOrder\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbSTide\fP [2]"
.br
.ti -1c
.RI "QCheckBox * \fBcbPTide\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbDegree\fP [2]"
.br
.ti -1c
.RI "QCheckBox * \fBcbAnelastic\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbLatDepend\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbEOPDiurn\fP [6]"
.br
.ti -1c
.RI "QRadioButton * \fBrbEOPDiurnAtm\fP [2]"
.br
.ti -1c
.RI "QRadioButton * \fBrbEOPDiurnNonTidal\fP [2]"
.br
.ti -1c
.RI "QLineEdit * \fBleEOPNInterp\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbEOP_IAU2K_XY\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbEOPResrerved_1\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbNutModel\fP [3]"
.br
.ti -1c
.RI "QRadioButton * \fBrbNutEquinox\fP [3]"
.br
.ti -1c
.RI "QCheckBox * \fBcbNutGeod\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbTPMModel\fP [3]"
.br
.ti -1c
.RI "QCheckBox * \fBcbStatVel\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbRB2Plates\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbAplo\fP"
.br
.ti -1c
.RI "QRadioButton * \fBrbDryZenith\fP [3]"
.br
.ti -1c
.RI "QRadioButton * \fBrbWetZenith\fP [3]"
.br
.ti -1c
.RI "QRadioButton * \fBrbDryMap\fP [6]"
.br
.ti -1c
.RI "QRadioButton * \fBrbWetMap\fP [6]"
.br
.ti -1c
.RI "QCheckBox * \fBcbAxissAlt\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbRB2NMF\fP"
.br
.ti -1c
.RI "QLineEdit * \fBeDelayQThreshold\fP"
.br
.ti -1c
.RI "QLineEdit * \fBeRateQThreshold\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbUseDelay\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbUseRate\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbUseBadIon\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbGenerateDSINEXes\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportMaps\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportTRF_Changes\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportCRF_Changes\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportCRF\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportTRF_SINEX\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportEOP\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportTechDesc\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportNormalEqs\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportNormalEqsSta\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportNormalEqsSou\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportNormalEqsEOP\fP"
.br
.ti -1c
.RI "QCheckBox * \fBcbReportTroposhere\fP"
.br
.ti -1c
.RI "QLineEdit * \fBleTropSamplInterval\fP"
.br
.ti -1c
.RI "QLineEdit * \fBleTropStartSec\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 214 of file SbIProject\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SBModelEditor::SBModelEditor (\fBSBConfig\fP *Cfg_, \fBQWidget\fP *parent = \fC0\fP, const char *name = \fC0\fP, boolmodal = \fCFALSE\fP, WFlagsf = \fC0\fP)"
.PP
Definition at line 711 of file SbIProject\&.C'\&.
.PP
References Cfg, SBProject::cfg(), isGlobal, isModified, SBSetUp::loadProject(), makeApply(), makeDefault(), SBNamed::name(), Project, SetUp, wDataProcessing(), wEOPs(), wLightPropagation(), wNutation(), wPlateMotion(), wRefraction(), wSolidTide(), wSolutionReports(), and wSysTransform()\&.
.SS "SBModelEditor::~SBModelEditor ()\fC [virtual]\fP"
.PP
Definition at line 748 of file SbIProject\&.C'\&.
.PP
References Cfg, Config, isGlobal, isModified, Project, SBSetUp::saveProject(), SBProject::setCfg(), and SetUp\&.
.SH "Member Function Documentation"
.PP 
.SS "void SBModelEditor::acquireData ()\fC [private, virtual]\fP"
.PP
Reimplemented from \fBSBTabDialog\fP'\&.
.PP
Definition at line 1552 of file SbIProject\&.C'\&.
.PP
References SBConfig::altEOPs(), SBConfig::altSources(), SBConfig::altStations(), cbAnelastic, cbAplo, cbAxissAlt, cbBody, cbEOP_IAU2K_XY, cbEOPResrerved_1, cbGenerateDSINEXes, cbIsHO, cbLatDepend, cbNutGeod, cbPTide, cbRB2NMF, cbRB2Plates, cbReportCRF, cbReportCRF_Changes, cbReportEOP, cbReportMaps, cbReportNormalEqs, cbReportNormalEqsEOP, cbReportNormalEqsSou, cbReportNormalEqsSta, cbReportTechDesc, cbReportTRF_Changes, cbReportTRF_SINEX, cbReportTroposhere, cbStatVel, cbUseAltEOPs, cbUseAltSources, cbUseAltStations, cbUseBadIon, cbUseDelay, cbUseRate, Cfg, DEG2RAD, SBConfig::dUFlagThreshold(), eDelayQThreshold, SBConfig::EDM_Gipson1995, SBConfig::EDM_GSFC95, SBConfig::EDM_HD1994, SBConfig::EDM_JPL92, SBConfig::EDM_NONE, SBConfig::EDM_Ray1995, SBConfig::EDMA_BBP, SBConfig::EDMA_NONE, SBConfig::EDMNT_NONE, SBConfig::EDMNT_Viron, SBConfig::EM_LEDE200, SBConfig::EM_LEDE403, SBConfig::EM_LEDE405, SBConfig::eopDiurnal(), SBConfig::eopDiurnalAtm(), SBConfig::eopDiurnalNonTidal(), SBConfig::eopNumIntrplPoints(), SBConfig::ephemModel(), eRateQThreshold, SBConfig::gravHOThreshold(), SBConfig::isAltAxsCorr(), SBConfig::isEOP_IAU2K_XY(), SBConfig::isEOPResrerved_1(), SBConfig::isEphBody(), SBConfig::isGenerateDSINEXes(), isGlobal, SBConfig::isGravDelayHO(), isModified, SBConfig::isNeedGeodNut(), SBConfig::isRemovePermTide(), SBConfig::isRollBack2NMF(), SBConfig::isRollBack2Plates(), SBConfig::isSolidTideAnelastic(), SBConfig::isSolidTideLatDepend(), SBConfig::isUseAploEphem(), SBConfig::isUseBadIon(), SBConfig::isUseDelay(), SBConfig::isUseRate(), SBConfig::isUseStationVelocity(), leAltEOPs, leAltSources, leAltStations, leEOPNInterp, leHOThreshold, leTropSamplInterval, leTropStartSec, SBConfig::NEE_IERS92, SBConfig::NEE_IERS96, SBConfig::NEE_SOVERS, SBConfig::NM_IAU1980, SBConfig::NM_IAU1996, SBConfig::NM_IAU2000, SBConfig::nutEquinox(), SBConfig::nutModel(), SBConfig::plateMotion(), SBConfig::PM_NNR_NUVEL1A, SBConfig::PM_NONE, SBConfig::PM_NUVEL1A, SBConfig::qCodeThreshold(), rbDegree, rbDryMap, rbDryZenith, rbEOPDiurn, rbEOPDiurnAtm, rbEOPDiurnNonTidal, rbEphem, rbNutEquinox, rbNutModel, rbSTide, rbSysTransform, rbTPMModel, rbWetMap, rbWetZenith, SBConfig::RDM_CfA2p2, SBConfig::RDM_Chao, SBConfig::RDM_Ifadis, SBConfig::RDM_MTT, SBConfig::RDM_NMFH2, SBConfig::RDM_NMFW2, SBConfig::RDM_NONE, SBConfig::RDZ_Hopfield, SBConfig::RDZ_NONE, SBConfig::RDZ_Saastamoinen, SBConfig::refrDryMapping(), SBConfig::refrDryZenith(), SBConfig::refrWetMapping(), SBConfig::refrWetZenith(), SBConfig::reportCRF(), SBConfig::reportCRF_Changes(), SBConfig::reportEOP(), SBConfig::reportMaps(), SBConfig::reportNormalEqs(), SBConfig::reportNormalEqsEOPs(), SBConfig::reportNormalEqsSRCs(), SBConfig::reportNormalEqsSTCs(), SBConfig::reportTechDesc(), SBConfig::reportTRF_Changes(), SBConfig::reportTRF_SINEX(), SBConfig::reportTroposhere(), SBConfig::RWM_Chao, SBConfig::RWM_Ifadis, SBConfig::RWM_MTT, SBConfig::RWM_NONE, SBConfig::RWZ_Hopfield, SBConfig::RWZ_NONE, SBConfig::RWZ_Saastamoinen, SBConfig::setAltEOPs(), SBConfig::setAltSources(), SBConfig::setAltStations(), SBConfig::setDUFlagThreshold(), SBConfig::setEopDiurnal(), SBConfig::setEopDiurnalAtm(), SBConfig::setEopDiurnalNonTidal(), SBConfig::setEOPNumIntrplPoints(), SBConfig::setEphemModel(), SBConfig::setGravHOThreshold(), SBConfig::setIsAltAxsCorr(), SBConfig::setIsEOP_IAU2K_XY(), SBConfig::setIsEOPResrerved_1(), SBConfig::setIsEphBody(), SBConfig::setIsGenerateDSINEXes(), SBConfig::setIsGravDelayHO(), SBConfig::setIsNeedGeodNut(), SBConfig::setIsRemovePermTide(), SBConfig::setIsRollBack2NMF(), SBConfig::setIsRollBack2Plates(), SBConfig::setIsSolidTideAnelastic(), SBConfig::setIsSolidTideLatDepend(), SBConfig::setIsUseAploEphem(), SBConfig::setIsUseBadIon(), SBConfig::setIsUseDelay(), SBConfig::setIsUseRate(), SBConfig::setIsUseStationVelocity(), SBConfig::setNutEquinox(), SBConfig::setNutModel(), SBConfig::setPlateMotion(), SBConfig::setQCodeThreshold(), SBConfig::setRefrDryMapping(), SBConfig::setRefrDryZenith(), SBConfig::setRefrWetMapping(), SBConfig::setRefrWetZenith(), SBConfig::setReportCRF(), SBConfig::setReportCRF_Changes(), SBConfig::setReportEOP(), SBConfig::setReportMaps(), SBConfig::setReportNormalEqs(), SBConfig::setReportNormalEqsEOPs(), SBConfig::setReportNormalEqsSRCs(), SBConfig::setReportNormalEqsSTCs(), SBConfig::setReportTechDesc(), SBConfig::setReportTRF_Changes(), SBConfig::setReportTRF_SINEX(), SBConfig::setReportTroposhere(), SBConfig::setSolidTideDegree(), SBConfig::setSolidTideLd(), SBConfig::setSysTransform(), SBConfig::setTropSamplInterval(), SBConfig::setTropStartSec(), SBConfig::setUseAltEOPs(), SBConfig::setUseAltSources(), SBConfig::setUseAltStations(), SBConfig::solidTideDegree(), SBConfig::solidTideLd(), SBConfig::ST_IERS92, SBConfig::ST_IERS96, SBConfig::STDEGREE_2, SBConfig::STDEGREE_3, Str, SBConfig::STR_Classic, SBConfig::STR_NRO, SBConfig::sysTransform(), SBConfig::tropSamplInterval(), SBConfig::tropStartSec(), SBConfig::useAltEOPs(), SBConfig::useAltSources(), and SBConfig::useAltStations()\&.
.PP
Referenced by makeApply()\&.
.SS "virtual QString SBModelEditor::ClassName () const\fC [inline, virtual]\fP"
.PP
Definition at line 220 of file SbIProject\&.H'\&.
.PP
Referenced by makeApply(), and makeDefault()\&.
.SS "virtual void SBTabDialog::closeEvent (QCloseEvent *)\fC [inline, protected, virtual, inherited]\fP"
.PP
Reimplemented in \fBSBSiteEditor\fP, and \fBSBParametersEditor\fP'\&.
.PP
Definition at line 90 of file SbInterface\&.H'\&.
.SS "virtual void SBTabDialog::done (intr)\fC [inline, protected, virtual, slot, inherited]\fP"
.PP
Reimplemented in \fBSBSiteEditor\fP, and \fBSBProjectEdit\fP'\&.
.PP
Definition at line 82 of file SbInterface\&.H'\&.
.PP
References SBTabDialog::acquireData()\&.
.SS "void SBModelEditor::makeApply ()\fC [protected, virtual, slot]\fP"
.PP
Reimplemented from \fBSBTabDialog\fP'\&.
.PP
Definition at line 837 of file SbIProject\&.C'\&.
.PP
References acquireData(), ClassName(), SBLog::DBG, SBLog::INTERFACE, Log, and SBLog::write()\&.
.PP
Referenced by SBModelEditor()\&.
.SS "void SBModelEditor::makeDefault ()\fC [protected, virtual, slot]\fP"
.PP
Definition at line 763 of file SbIProject\&.C'\&.
.PP
References SBConfig::altEOPs(), SBConfig::altSources(), SBConfig::altStations(), cbAnelastic, cbAplo, cbAxissAlt, cbBody, cbEOP_IAU2K_XY, cbEOPResrerved_1, cbIsHO, cbLatDepend, cbNutGeod, cbPTide, cbRB2NMF, cbRB2Plates, cbReportCRF, cbReportCRF_Changes, cbReportEOP, cbReportMaps, cbReportNormalEqs, cbReportNormalEqsEOP, cbReportNormalEqsSou, cbReportNormalEqsSta, cbReportTechDesc, cbReportTRF_Changes, cbReportTRF_SINEX, cbReportTroposhere, cbStatVel, cbUseAltEOPs, cbUseAltSources, cbUseAltStations, cbUseDelay, cbUseRate, Cfg, ClassName(), SBLog::DBG, DefaultConfig, SBConfig::dUFlagThreshold(), eDelayQThreshold, SBConfig::eopDiurnal(), SBConfig::eopDiurnalAtm(), SBConfig::eopDiurnalNonTidal(), SBConfig::eopNumIntrplPoints(), SBConfig::ephemModel(), eRateQThreshold, SBConfig::gravHOThreshold(), SBLog::INTERFACE, SBConfig::isAltAxsCorr(), SBConfig::isEOP_IAU2K_XY(), SBConfig::isEOPResrerved_1(), SBConfig::isEphBody(), isGlobal, SBConfig::isGravDelayHO(), SBConfig::isNeedGeodNut(), SBConfig::isRemovePermTide(), SBConfig::isRollBack2NMF(), SBConfig::isRollBack2Plates(), SBConfig::isSolidTideAnelastic(), SBConfig::isSolidTideLatDepend(), SBConfig::isUseAploEphem(), SBConfig::isUseDelay(), SBConfig::isUseRate(), SBConfig::isUseStationVelocity(), leAltEOPs, leAltSources, leAltStations, leEOPNInterp, leHOThreshold, leTropSamplInterval, leTropStartSec, Log, SBConfig::nutEquinox(), SBConfig::nutModel(), SBConfig::plateMotion(), SBConfig::qCodeThreshold(), RAD2DEG, rbDegree, rbDryMap, rbDryZenith, rbEOPDiurn, rbEOPDiurnAtm, rbEOPDiurnNonTidal, rbEphem, rbNutEquinox, rbNutModel, rbSTide, rbSysTransform, rbTPMModel, rbWetMap, rbWetZenith, SBConfig::refrDryMapping(), SBConfig::refrDryZenith(), SBConfig::refrWetMapping(), SBConfig::refrWetZenith(), SBConfig::reportCRF(), SBConfig::reportCRF_Changes(), SBConfig::reportEOP(), SBConfig::reportMaps(), SBConfig::reportNormalEqs(), SBConfig::reportNormalEqsEOPs(), SBConfig::reportNormalEqsSRCs(), SBConfig::reportNormalEqsSTCs(), SBConfig::reportTechDesc(), SBConfig::reportTRF_Changes(), SBConfig::reportTRF_SINEX(), SBConfig::reportTroposhere(), SBConfig::solidTideDegree(), SBConfig::solidTideLd(), Str, SBConfig::sysTransform(), SBConfig::tropSamplInterval(), SBConfig::tropStartSec(), SBConfig::useAltEOPs(), SBConfig::useAltSources(), SBConfig::useAltStations(), and SBLog::write()\&.
.PP
Referenced by SBModelEditor()\&.
.SS "virtual void SBTabDialog::makeDefaults ()\fC [inline, protected, virtual, slot, inherited]\fP"
.PP
Reimplemented in \fBSBSetupDialog\fP'\&.
.PP
Definition at line 79 of file SbInterface\&.H'\&.
.SS "void SBModelEditor::solidTideIERS92 (boolon)\fC [protected, slot]\fP"
.PP
Definition at line 1049 of file SbIProject\&.C'\&.
.PP
References bgSTOrder, cbAnelastic, cbLatDepend, gbSTIERS96, and rbDegree\&.
.PP
Referenced by wSolidTide()\&.
.SS "\fBQWidget\fP * SBModelEditor::wDataProcessing ()\fC [private]\fP"
.PP
Definition at line 1356 of file SbIProject\&.C'\&.
.PP
References cbGenerateDSINEXes, cbUseBadIon, cbUseDelay, cbUseRate, Cfg, SBConfig::dUFlagThreshold(), eDelayQThreshold, eRateQThreshold, SBConfig::isGenerateDSINEXes(), SBConfig::isUseBadIon(), SBConfig::isUseDelay(), SBConfig::isUseRate(), and SBConfig::qCodeThreshold()\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wEOPs ()\fC [private]\fP"
.PP
Definition at line 1059 of file SbIProject\&.C'\&.
.PP
References cbEOP_IAU2K_XY, cbEOPResrerved_1, Cfg, SBConfig::eopDiurnal(), SBConfig::eopDiurnalAtm(), SBConfig::eopDiurnalNonTidal(), SBConfig::eopNumIntrplPoints(), SBConfig::isEOP_IAU2K_XY(), SBConfig::isEOPResrerved_1(), leEOPNInterp, rbEOPDiurn, rbEOPDiurnAtm, rbEOPDiurnNonTidal, and Str\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wLightPropagation ()\fC [private]\fP"
.PP
Definition at line 917 of file SbIProject\&.C'\&.
.PP
References cbBody, cbIsHO, Cfg, SBConfig::ephemModel(), SBConfig::gravHOThreshold(), SBConfig::isEphBody(), SBConfig::isGravDelayHO(), leHOThreshold, RAD2DEG, rbEphem, and Str\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wNutation ()\fC [private]\fP"
.PP
Definition at line 1149 of file SbIProject\&.C'\&.
.PP
References cbNutGeod, Cfg, SBConfig::isNeedGeodNut(), SBConfig::nutEquinox(), SBConfig::nutModel(), rbNutEquinox, and rbNutModel\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wPlateMotion ()\fC [private]\fP"
.PP
Definition at line 1198 of file SbIProject\&.C'\&.
.PP
References cbAplo, cbRB2Plates, cbStatVel, Cfg, SBConfig::isRollBack2Plates(), SBConfig::isUseAploEphem(), SBConfig::isUseStationVelocity(), SBConfig::plateMotion(), SBConfig::PM_NONE, and rbTPMModel\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wRefraction ()\fC [private]\fP"
.PP
Definition at line 1251 of file SbIProject\&.C'\&.
.PP
References cbAxissAlt, cbRB2NMF, Cfg, SBConfig::isAltAxsCorr(), SBConfig::isRollBack2NMF(), rbDryMap, rbDryZenith, rbWetMap, rbWetZenith, SBConfig::refrDryMapping(), SBConfig::refrDryZenith(), SBConfig::refrWetMapping(), and SBConfig::refrWetZenith()\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wSolidTide ()\fC [private]\fP"
.PP
Definition at line 988 of file SbIProject\&.C'\&.
.PP
References bgSTOrder, cbAnelastic, cbLatDepend, cbPTide, Cfg, gbSTIERS96, SBConfig::isRemovePermTide(), SBConfig::isSolidTideAnelastic(), SBConfig::isSolidTideLatDepend(), rbDegree, rbSTide, SBConfig::solidTideDegree(), solidTideIERS92(), and SBConfig::solidTideLd()\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wSolutionReports ()\fC [private]\fP"
.PP
Definition at line 1444 of file SbIProject\&.C'\&.
.PP
References cbReportCRF, cbReportCRF_Changes, cbReportEOP, cbReportMaps, cbReportNormalEqs, cbReportNormalEqsEOP, cbReportNormalEqsSou, cbReportNormalEqsSta, cbReportTechDesc, cbReportTRF_Changes, cbReportTRF_SINEX, cbReportTroposhere, Cfg, leTropSamplInterval, leTropStartSec, SBConfig::reportCRF(), SBConfig::reportCRF_Changes(), SBConfig::reportEOP(), SBConfig::reportMaps(), SBConfig::reportNormalEqs(), SBConfig::reportNormalEqsEOPs(), SBConfig::reportNormalEqsSRCs(), SBConfig::reportNormalEqsSTCs(), SBConfig::reportTechDesc(), SBConfig::reportTRF_Changes(), SBConfig::reportTRF_SINEX(), SBConfig::reportTroposhere(), SBConfig::tropSamplInterval(), and SBConfig::tropStartSec()\&.
.PP
Referenced by SBModelEditor()\&.
.SS "\fBQWidget\fP * SBModelEditor::wSysTransform ()\fC [private]\fP"
.PP
Definition at line 844 of file SbIProject\&.C'\&.
.PP
References SBConfig::altEOPs(), SBConfig::altSources(), SBConfig::altStations(), cbUseAltEOPs, cbUseAltSources, cbUseAltStations, Cfg, isGlobal, leAltEOPs, leAltSources, leAltStations, rbSysTransform, SBConfig::sysTransform(), SBConfig::useAltEOPs(), SBConfig::useAltSources(), and SBConfig::useAltStations()\&.
.PP
Referenced by SBModelEditor()\&.
.SH "Member Data Documentation"
.PP 
.SS "QButtonGroup* \fBSBModelEditor::bgSTOrder\fP\fC [private]\fP"
.PP
Definition at line 260 of file SbIProject\&.H'\&.
.PP
Referenced by solidTideIERS92(), and wSolidTide()\&.
.SS "QCheckBox* \fBSBModelEditor::cbAnelastic\fP\fC [private]\fP"
.PP
Definition at line 264 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), solidTideIERS92(), and wSolidTide()\&.
.SS "QCheckBox* \fBSBModelEditor::cbAplo\fP\fC [private]\fP"
.PP
Definition at line 287 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wPlateMotion()\&.
.SS "QCheckBox* \fBSBModelEditor::cbAxissAlt\fP\fC [private]\fP"
.PP
Definition at line 295 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wRefraction()\&.
.SS "QCheckBox* \fBSBModelEditor::cbBody\fP[11]\fC [private]\fP"
.PP
Definition at line 255 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wLightPropagation()\&.
.SS "QCheckBox* \fBSBModelEditor::cbEOP_IAU2K_XY\fP\fC [private]\fP"
.PP
Definition at line 273 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wEOPs()\&.
.SS "QCheckBox* \fBSBModelEditor::cbEOPResrerved_1\fP\fC [private]\fP"
.PP
Definition at line 274 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wEOPs()\&.
.SS "QCheckBox* \fBSBModelEditor::cbGenerateDSINEXes\fP\fC [private]\fP"
.PP
Definition at line 305 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), and wDataProcessing()\&.
.SS "QCheckBox* \fBSBModelEditor::cbIsHO\fP\fC [private]\fP"
.PP
Definition at line 253 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wLightPropagation()\&.
.SS "QCheckBox* \fBSBModelEditor::cbLatDepend\fP\fC [private]\fP"
.PP
Definition at line 265 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), solidTideIERS92(), and wSolidTide()\&.
.SS "QCheckBox* \fBSBModelEditor::cbNutGeod\fP\fC [private]\fP"
.PP
Definition at line 280 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wNutation()\&.
.SS "QCheckBox* \fBSBModelEditor::cbPTide\fP\fC [private]\fP"
.PP
Definition at line 262 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolidTide()\&.
.SS "QCheckBox* \fBSBModelEditor::cbRB2NMF\fP\fC [private]\fP"
.PP
Definition at line 296 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wRefraction()\&.
.SS "QCheckBox* \fBSBModelEditor::cbRB2Plates\fP\fC [private]\fP"
.PP
Definition at line 286 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wPlateMotion()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportCRF\fP\fC [private]\fP"
.PP
Definition at line 313 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportCRF_Changes\fP\fC [private]\fP"
.PP
Definition at line 312 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportEOP\fP\fC [private]\fP"
.PP
Definition at line 315 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportMaps\fP\fC [private]\fP"
.PP
Definition at line 310 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportNormalEqs\fP\fC [private]\fP"
.PP
Definition at line 317 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportNormalEqsEOP\fP\fC [private]\fP"
.PP
Definition at line 321 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportNormalEqsSou\fP\fC [private]\fP"
.PP
Definition at line 320 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportNormalEqsSta\fP\fC [private]\fP"
.PP
Definition at line 319 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportTechDesc\fP\fC [private]\fP"
.PP
Definition at line 316 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportTRF_Changes\fP\fC [private]\fP"
.PP
Definition at line 311 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportTRF_SINEX\fP\fC [private]\fP"
.PP
Definition at line 314 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbReportTroposhere\fP\fC [private]\fP"
.PP
Definition at line 323 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QCheckBox* \fBSBModelEditor::cbStatVel\fP\fC [private]\fP"
.PP
Definition at line 285 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wPlateMotion()\&.
.SS "QCheckBox* \fBSBModelEditor::cbUseAltEOPs\fP\fC [private]\fP"
.PP
Definition at line 244 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QCheckBox* \fBSBModelEditor::cbUseAltSources\fP\fC [private]\fP"
.PP
Definition at line 243 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QCheckBox* \fBSBModelEditor::cbUseAltStations\fP\fC [private]\fP"
.PP
Definition at line 242 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QCheckBox* \fBSBModelEditor::cbUseBadIon\fP\fC [private]\fP"
.PP
Definition at line 304 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), and wDataProcessing()\&.
.SS "QCheckBox* \fBSBModelEditor::cbUseDelay\fP\fC [private]\fP"
.PP
Definition at line 302 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wDataProcessing()\&.
.SS "QCheckBox* \fBSBModelEditor::cbUseRate\fP\fC [private]\fP"
.PP
Definition at line 303 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wDataProcessing()\&.
.SS "\fBSBConfig\fP* \fBSBModelEditor::Cfg\fP\fC [private]\fP"
.PP
Definition at line 229 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), SBModelEditor(), wDataProcessing(), wEOPs(), wLightPropagation(), wNutation(), wPlateMotion(), wRefraction(), wSolidTide(), wSolutionReports(), wSysTransform(), and ~SBModelEditor()\&.
.SS "QLineEdit* \fBSBModelEditor::eDelayQThreshold\fP\fC [private]\fP"
.PP
Definition at line 300 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wDataProcessing()\&.
.SS "QLineEdit* \fBSBModelEditor::eRateQThreshold\fP\fC [private]\fP"
.PP
Definition at line 301 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wDataProcessing()\&.
.SS "QGroupBox* \fBSBModelEditor::gbSTIERS96\fP\fC [private]\fP"
.PP
Definition at line 259 of file SbIProject\&.H'\&.
.PP
Referenced by solidTideIERS92(), and wSolidTide()\&.
.SS "bool \fBSBModelEditor::isGlobal\fP\fC [private]\fP"
.PP
Definition at line 232 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), SBModelEditor(), wSysTransform(), and ~SBModelEditor()\&.
.SS "bool \fBSBModelEditor::isModified\fP\fC [private]\fP"
.PP
Definition at line 231 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), SBModelEditor(), and ~SBModelEditor()\&.
.SS "QLineEdit* \fBSBModelEditor::leAltEOPs\fP\fC [private]\fP"
.PP
Definition at line 247 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QLineEdit* \fBSBModelEditor::leAltSources\fP\fC [private]\fP"
.PP
Definition at line 246 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QLineEdit* \fBSBModelEditor::leAltStations\fP\fC [private]\fP"
.PP
Definition at line 245 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QLineEdit* \fBSBModelEditor::leEOPNInterp\fP\fC [private]\fP"
.PP
Definition at line 272 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wEOPs()\&.
.SS "QLineEdit* \fBSBModelEditor::leHOThreshold\fP\fC [private]\fP"
.PP
Definition at line 254 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wLightPropagation()\&.
.SS "QLineEdit* \fBSBModelEditor::leTropSamplInterval\fP\fC [private]\fP"
.PP
Definition at line 324 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "QLineEdit* \fBSBModelEditor::leTropStartSec\fP\fC [private]\fP"
.PP
Definition at line 325 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolutionReports()\&.
.SS "\fBSBProject\fP* \fBSBModelEditor::Project\fP\fC [private]\fP"
.PP
Definition at line 230 of file SbIProject\&.H'\&.
.PP
Referenced by SBModelEditor(), and ~SBModelEditor()\&.
.SS "QRadioButton* \fBSBModelEditor::rbDegree\fP[2]\fC [private]\fP"
.PP
Definition at line 263 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), solidTideIERS92(), and wSolidTide()\&.
.SS "QRadioButton* \fBSBModelEditor::rbDryMap\fP[6]\fC [private]\fP"
.PP
Definition at line 293 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wRefraction()\&.
.SS "QRadioButton* \fBSBModelEditor::rbDryZenith\fP[3]\fC [private]\fP"
.PP
Definition at line 291 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wRefraction()\&.
.SS "QRadioButton* \fBSBModelEditor::rbEOPDiurn\fP[6]\fC [private]\fP"
.PP
Definition at line 269 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wEOPs()\&.
.SS "QRadioButton* \fBSBModelEditor::rbEOPDiurnAtm\fP[2]\fC [private]\fP"
.PP
Definition at line 270 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wEOPs()\&.
.SS "QRadioButton* \fBSBModelEditor::rbEOPDiurnNonTidal\fP[2]\fC [private]\fP"
.PP
Definition at line 271 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wEOPs()\&.
.SS "QRadioButton* \fBSBModelEditor::rbEphem\fP[3]\fC [private]\fP"
.PP
Definition at line 252 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wLightPropagation()\&.
.SS "QRadioButton* \fBSBModelEditor::rbNutEquinox\fP[3]\fC [private]\fP"
.PP
Definition at line 279 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wNutation()\&.
.SS "QRadioButton* \fBSBModelEditor::rbNutModel\fP[3]\fC [private]\fP"
.PP
Definition at line 278 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wNutation()\&.
.SS "QRadioButton* \fBSBModelEditor::rbSTide\fP[2]\fC [private]\fP"
.PP
Definition at line 261 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSolidTide()\&.
.SS "QRadioButton* \fBSBModelEditor::rbSysTransform\fP[2]\fC [private]\fP"
.PP
Definition at line 240 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wSysTransform()\&.
.SS "QRadioButton* \fBSBModelEditor::rbTPMModel\fP[3]\fC [private]\fP"
.PP
Definition at line 284 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wPlateMotion()\&.
.SS "QRadioButton* \fBSBModelEditor::rbWetMap\fP[6]\fC [private]\fP"
.PP
Definition at line 294 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wRefraction()\&.
.SS "QRadioButton* \fBSBModelEditor::rbWetZenith\fP[3]\fC [private]\fP"
.PP
Definition at line 292 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), and wRefraction()\&.
.SS "QString \fBSBModelEditor::Str\fP\fC [private]\fP"
.PP
Definition at line 233 of file SbIProject\&.H'\&.
.PP
Referenced by acquireData(), makeDefault(), wEOPs(), and wLightPropagation()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
