.TH "SBMEM" 3 "Mon May 14 2012" "Version 2.0.2" "SteelBreeze Reference Manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SBMEM \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SbMathMEM\&.H>\fP
.PP
Inherits \fBSBAttributed\fP'\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBMEMType\fP { \fBType_Recursion\fP = 0, \fBType_LSF\fP = 1, \fBType_LSB\fP = 2, \fBType_LSFnB\fP = 3 }"
.br
.ti -1c
.RI "enum \fBAttributes\fP { \fBignoreNotEquidistant\fP =  1<<0, \fBfillMissingImag\fP =  1<<1, \fBremoveShifts\fP =  1<<2, \fBremoveTrends\fP =  1<<3 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSBMEM\fP ()"
.br
.ti -1c
.RI "virtual \fB~SBMEM\fP ()"
.br
.ti -1c
.RI "virtual QString \fBClassName\fP () const "
.br
.ti -1c
.RI "unsigned int \fBm\fP () const "
.br
.ti -1c
.RI "unsigned int \fBn\fP () const "
.br
.ti -1c
.RI "\fBSBVector\fP * \fBx\fP ()"
.br
.ti -1c
.RI "\fBSBVector\fP * \fBz_r\fP ()"
.br
.ti -1c
.RI "\fBSBVector\fP * \fBz_i\fP ()"
.br
.ti -1c
.RI "bool \fBisReady\fP () const "
.br
.ti -1c
.RI "bool \fBisOK\fP () const "
.br
.ti -1c
.RI "\fBMEMType\fP \fBtype\fP () const "
.br
.ti -1c
.RI "double \fBdt\fP () const "
.br
.ti -1c
.RI "double \fBshiftR\fP () const "
.br
.ti -1c
.RI "double \fBtrendR\fP () const "
.br
.ti -1c
.RI "double \fBshiftI\fP () const "
.br
.ti -1c
.RI "double \fBtrendI\fP () const "
.br
.ti -1c
.RI "double \fBsampleVar\fP () const "
.br
.ti -1c
.RI "void \fBsetM\fP (unsigned int M_)"
.br
.ti -1c
.RI "void \fBsetType\fP (\fBMEMType\fP T_)"
.br
.ti -1c
.RI "unsigned int \fBvalidM\fP ()"
.br
.ti -1c
.RI "std::complex< double > \fBam\fP (unsigned int i)"
.br
.ti -1c
.RI "void \fBreadDataFile\fP (const QString &)"
.br
.ti -1c
.RI "bool \fBprepareSpectrum\fP ()"
.br
.ti -1c
.RI "double \fBfN\fP () const "
.br
.ti -1c
.RI "double \fBpm\fP () const "
.br
.ti -1c
.RI "double \fBpsd\fP (double)"
.br
.ti -1c
.RI "double \fBinterval\fP () const "
.br
.ti -1c
.RI "double \fBfpe\fP () const "
.br
.ti -1c
.RI "uint \fBattributes\fP () const "
.br
.ti -1c
.RI "void \fBsetAttributes\fP (uint A_)"
.br
.ti -1c
.RI "void \fBaddAttr\fP (uint A_)"
.br
.ti -1c
.RI "void \fBdelAttr\fP (uint A_)"
.br
.ti -1c
.RI "void \fBxorAttr\fP (uint A_)"
.br
.ti -1c
.RI "bool \fBisAttr\fP (uint A_) const "
.br
.ti -1c
.RI "void \fBclearAll\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBcalcA_Recusion\fP ()"
.br
.ti -1c
.RI "void \fBcalcA_LSForward\fP ()"
.br
.ti -1c
.RI "void \fBcalcA_LSBackward\fP ()"
.br
.ti -1c
.RI "void \fBcalcA_LSFnB\fP ()"
.br
.ti -1c
.RI "void \fBcreateAuxVectors\fP ()"
.br
.ti -1c
.RI "void \fBremoveShiftsFromData\fP ()"
.br
.ti -1c
.RI "void \fBremoveTrendsFromData\fP ()"
.br
.ti -1c
.RI "double \fBmod2\fP (double r, double i) const "
.br
.ti -1c
.RI "double \fBmod2\fP (std::complex< double > c) const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBSBVector\fP * \fBX\fP"
.br
.RI "\fIthe argument \fP"
.ti -1c
.RI "\fBSBVector\fP * \fBZ_r\fP"
.br
.RI "\fIreal part of data \fP"
.ti -1c
.RI "\fBSBVector\fP * \fBZ_i\fP"
.br
.RI "\fIimagenary part of data \fP"
.ti -1c
.RI "std::complex< double > * \fBAm\fP"
.br
.ti -1c
.RI "std::complex< double > * \fBAm_1\fP"
.br
.ti -1c
.RI "std::complex< double > * \fBEFm\fP"
.br
.ti -1c
.RI "std::complex< double > * \fBEFm_1\fP"
.br
.ti -1c
.RI "std::complex< double > * \fBEBm\fP"
.br
.ti -1c
.RI "std::complex< double > * \fBEBm_1\fP"
.br
.ti -1c
.RI "double \fBPm\fP"
.br
.ti -1c
.RI "double \fBPm_1\fP"
.br
.ti -1c
.RI "double \fBDT\fP"
.br
.RI "\fIsample interval \fP"
.ti -1c
.RI "bool \fBIsOK\fP"
.br
.ti -1c
.RI "bool \fBIsReady\fP"
.br
.ti -1c
.RI "double \fBShiftR\fP"
.br
.ti -1c
.RI "double \fBShiftI\fP"
.br
.ti -1c
.RI "double \fBTrendR\fP"
.br
.ti -1c
.RI "double \fBTrendI\fP"
.br
.ti -1c
.RI "bool \fBIsMSet\fP"
.br
.ti -1c
.RI "unsigned int \fBM\fP"
.br
.RI "\fIthe length of the filter \fP"
.ti -1c
.RI "unsigned int \fBN\fP"
.br
.RI "\fIthe number of points \fP"
.ti -1c
.RI "\fBMEMType\fP \fBType\fP"
.br
.RI "\fIthe method of a's calculation \fP"
.ti -1c
.RI "unsigned int \fBMAuxCreated\fP"
.br
.ti -1c
.RI "double \fBSampleVar\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static const std::complex< double > \fBCZero\fP = std::complex<double>(0\&.0, 0\&.0)"
.br
.ti -1c
.RI "static const std::complex< double > \fBCI\fP = std::complex<double>(0\&.0, 1\&.0)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "QDataStream & \fBoperator<<\fP (QDataStream &s, const \fBSBAttributed\fP &A)"
.br
.ti -1c
.RI "QDataStream & \fBoperator>>\fP (QDataStream &s, \fBSBAttributed\fP &A)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 45 of file SbMathMEM\&.H'\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBSBMEM::Attributes\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIignoreNotEquidistant \fP\fP
assume data are equidistant 
.TP
\fB\fIfillMissingImag \fP\fP
fill missing imag-column with zero 
.TP
\fB\fIremoveShifts \fP\fP
remove shifts from data 
.TP
\fB\fIremoveTrends \fP\fP
remove shifts+trends from data 
.PP
Definition at line 50 of file SbMathMEM\&.H'\&.
.SS "enum \fBSBMEM::MEMType\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIType_Recursion \fP\fP
.TP
\fB\fIType_LSF \fP\fP
.TP
\fB\fIType_LSB \fP\fP
.TP
\fB\fIType_LSFnB \fP\fP

.PP
Definition at line 48 of file SbMathMEM\&.H'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SBMEM::SBMEM ()"
.PP
Definition at line 39 of file SbMathMEM\&.C'\&.
.PP
References Am, Am_1, DT, EBm, EBm_1, EFm, EFm_1, IsMSet, IsOK, IsReady, M, MAuxCreated, N, Pm, Pm_1, SampleVar, ShiftI, ShiftR, TrendI, TrendR, Type, Type_Recursion, X, Z_i, and Z_r\&.
.SS "SBMEM::~SBMEM ()\fC [virtual]\fP"A destructor'\&. 
.PP
Definition at line 67 of file SbMathMEM\&.C'\&.
.PP
References Am, Am_1, EBm, EBm_1, EFm, EFm_1, X, Z_i, and Z_r\&.
.SH "Member Function Documentation"
.PP 
.SS "void SBAttributed::addAttr (uintA_)\fC [inline, inherited]\fP"Adds the attribute to the storage'\&. 
.PP
Definition at line 247 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.PP
Referenced by SBVLBISession::checkArtMeteo(), SBVLBISession::checkAttributres(), SBStation::createOLoad(), SBVLBIPreProcess::fixSession(), SBAploChunk::import(), SBAploEphem::importHPS(), SBMaster::importMF(), SBFilteringGauss::makeAnalysisWith3Sigma(), SBSourceEditor::makeApply(), SBStationEditor::makeApply(), SBRunManager::makeReportCRF(), SBRunManager::makeReportCRFVariations4IVS(), SBRunManager::makeReportTRF(), operator>>(), SBFilterGauss::prepareModels(), SBObsVLBIEntry::process(), SBStationInfo::restoreUserInfo(), SBBaseInfo::restoreUserInfo(), SBSourceInfo::restoreUserInfo(), SBVLBISession::restoreUserInfo(), SBEphem::SBEphem(), SBSourceInfo::SBSourceInfo(), SBStationInfo::SBStationInfo(), SBSpectrumAnalyserMEM::setMEMAssumeEquiDistant(), SBSpectrumAnalyserMEM::setMEMFillMissingImag(), SBSpectrumAnalyserMEM::setMEMRemoveShifts(), SBSpectrumAnalyserMEM::setMEMRemoveTrends(), SBParameter::tuneParameter(), SBSolutionBrowser::updateCRF(), and SBSolutionBrowser::updateTRF()\&.
.SS "std::complex<double> SBMEM::am (unsigned inti)\fC [inline]\fP"
.PP
Definition at line 142 of file SbMathMEM\&.H'\&.
.PP
References Am, CZero, IsMSet, and M\&.
.SS "uint SBAttributed::attributes () const\fC [inline, inherited]\fP"Returns the attributes'\&. 
.PP
Definition at line 243 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.PP
Referenced by SBCoordinates::operator==(), and SBVLBISessionEditor::~SBVLBISessionEditor()\&.
.SS "void SBMEM::calcA_LSBackward ()\fC [protected]\fP"
.PP
Definition at line 585 of file SbMathMEM\&.C'\&.
.PP
References Am, SBVector::at(), SBMatrix::at(), SBUpperMatrix::at(), IsReady, M, N, Pm, SBVector::set(), SBMatrix::set(), SBUpperMatrix::set(), sign(), Solve(), Z_i, and Z_r\&.
.PP
Referenced by prepareSpectrum()\&.
.SS "void SBMEM::calcA_LSFnB ()\fC [protected]\fP"
.PP
Definition at line 674 of file SbMathMEM\&.C'\&.
.PP
References Am, SBVector::at(), SBMatrix::at(), SBUpperMatrix::at(), IsReady, M, N, Pm, SBVector::set(), SBMatrix::set(), SBUpperMatrix::set(), sign(), Solve(), Z_i, and Z_r\&.
.PP
Referenced by prepareSpectrum()\&.
.SS "void SBMEM::calcA_LSForward ()\fC [protected]\fP"
.PP
Definition at line 470 of file SbMathMEM\&.C'\&.
.PP
References Am, SBVector::at(), SBMatrix::at(), SBUpperMatrix::at(), IsReady, M, N, Pm, SBVector::set(), SBMatrix::set(), SBUpperMatrix::set(), sign(), Solve(), Z_i, and Z_r\&.
.PP
Referenced by prepareSpectrum()\&.
.SS "void SBMEM::calcA_Recusion ()\fC [protected]\fP"
.PP
Definition at line 395 of file SbMathMEM\&.C'\&.
.PP
References Am, Am_1, SBVector::at(), CZero, EBm, EBm_1, EFm, EFm_1, IsReady, M, m(), mod2(), N, Pm, Pm_1, Z_i, and Z_r\&.
.PP
Referenced by prepareSpectrum()\&.
.SS "virtual QString SBMEM::ClassName () const\fC [inline, virtual]\fP"Refers to a class name (debug info)'\&. 
.PP
Reimplemented from \fBSBAttributed\fP'\&.
.PP
Definition at line 117 of file SbMathMEM\&.H'\&.
.PP
Referenced by createAuxVectors(), prepareSpectrum(), and readDataFile()\&.
.SS "void SBAttributed::clearAll ()\fC [inline, inherited]\fP"Removes all attributes'\&. 
.PP
Definition at line 255 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.SS "void SBMEM::createAuxVectors ()\fC [protected]\fP"
.PP
Definition at line 251 of file SbMathMEM\&.C'\&.
.PP
References Am, Am_1, ClassName(), SBLog::DATA, EBm, EBm_1, EFm, EFm_1, SBLog::ERR, IsMSet, Log, M, MAuxCreated, N, and SBLog::write()\&.
.PP
Referenced by prepareSpectrum()\&.
.SS "void SBAttributed::delAttr (uintA_)\fC [inline, inherited]\fP"Deletes the attribute from the storage'\&. 
.PP
Definition at line 249 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.PP
Referenced by SBProject::addSession(), SBVLBISession::checkAttributres(), SBVLBIPreProcess::clearPars(), SBStation::deleteOLoad(), SBObsVLBIEntry::isEligible(), SBFilteringGauss::makeAnalysisWith3Sigma(), SBRunManager::makeReportCRF(), SBRunManager::makeReportCRFVariations4IVS(), SBRunManager::makeReportTRF(), SBStationInfo::restoreUserInfo(), SBBaseInfo::restoreUserInfo(), SBSourceInfo::restoreUserInfo(), SBVLBISession::restoreUserInfo(), SBParameter::rw(), SBEphem::SBEphem(), SBStation::SBStation(), SBSpectrumAnalyserMEM::setMEMAssumeEquiDistant(), SBSpectrumAnalyserMEM::setMEMFillMissingImag(), SBSpectrumAnalyserMEM::setMEMRemoveShifts(), SBSpectrumAnalyserMEM::setMEMRemoveTrends(), and SBParameter::tuneParameter()\&.
.SS "double SBMEM::dt () const\fC [inline]\fP"
.PP
Definition at line 129 of file SbMathMEM\&.H'\&.
.PP
References DT\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "double SBMEM::fN () const\fC [inline]\fP"
.PP
Definition at line 149 of file SbMathMEM\&.H'\&.
.PP
References DT, and IsOK\&.
.PP
Referenced by psd(), SBSpectrumAnalyserMEM::redrawSpectrumPlot(), SBSpectrumAnalyserMEM::resetLimits(), and SBSpectrumAnalyserMEM::setScalingCPD2CPY()\&.
.SS "double SBMEM::fpe () const\fC [inline]\fP"
.PP
Definition at line 153 of file SbMathMEM\&.H'\&.
.PP
References SBAttributed::isAttr(), IsOK, M, N, Pm, removeShifts, and removeTrends\&.
.PP
Referenced by SBSpectrumAnalyserMEM::makeAnalysis(), and SBSpectrumAnalyserMEM::redrawFPEPlot()\&.
.SS "double SBMEM::interval () const\fC [inline]\fP"
.PP
Definition at line 152 of file SbMathMEM\&.H'\&.
.PP
References SBVector::at(), IsOK, N, and X\&.
.PP
Referenced by SBSpectrumAnalyserMEM::resetLimits()\&.
.SS "bool SBAttributed::isAttr (uintA_) const\fC [inline, inherited]\fP"Returns TRUE if the attribute is set'\&. 
.PP
Definition at line 253 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.PP
Referenced by SBStationEditor::acquireData(), SBStaParsEditor::acquireData(), SBObsVLBIEntry::ambientH_1(), SBObsVLBIEntry::ambientH_2(), SBObsVLBIEntry::ambientP_1(), SBObsVLBIEntry::ambientP_2(), SBObsVLBIEntry::ambientT_1(), SBObsVLBIEntry::ambientT_2(), SBDelay::calc(), SBVLBISession::checkArtMeteo(), SBVLBISession::checkAttributres(), collectListOfSINEXParameters(), SBStationInfo::dumpUserInfo(), SBBaseInfo::dumpUserInfo(), SBSourceInfo::dumpUserInfo(), SBVLBISession::dumpUserInfo(), SBFilterModel::eliminateAfter(), SBFilterModel::eliminateBefore(), SBVLBIPreProcess::fillObsListView(), SBRunManager::fillParameterList(), fpe(), SBFilterGauss::interpolate(), SBObservation::isEligible(), SBObsVLBIEntry::isEligible(), SBVLBIObsPPLI::key(), SBSourceListItem::key(), SBStationListItem::key(), SBVLBISesInfoLI::key(), SBVLBISesPreProcLI::key(), SBVLBIObsLI::key(), SBStaInfoLI::key(), SBBasInfoLI::key(), SBSouInfoLI::key(), SBStationImport::loadOLoad(), SBParameter::m(), SBRunManager::makeReportCRF(), SBRunManager::makeReportCRFVariations(), SBRunManager::makeReportCRFVariations4IVS(), SBRunManager::makeReportMaps(), SBRunManager::makeReportTRF(), SBRunManager::makeReportTRFVariations(), operator<<(), operator>>(), SBVLBIObsPPLI::paintCell(), SBObsVLBIEntry::process(), SBRunManager::process_m1(), readDataFile(), SBParameter::rw(), SBStaParsEditor::SBStaParsEditor(), SBProjectCreate::selChanged(), sinex_SiteEccentricityBlock(), sinex_SiteIDBlock(), sinex_SourceIDBlock(), SBParameter::str4compare(), SBVLBIObsPPLI::text(), SBSourceListItem::text(), SBStationListItem::text(), SBVLBISesInfoLI::text(), SBVLBISesPreProcLI::text(), SBVLBIObsLI::text(), SBStaInfoLI::text(), SBBasInfoLI::text(), SBSouInfoLI::text(), SBMasterRecBrowser::SBMRListItem::text(), SBSolutionBrowser::updateCRF(), SBBrowseSources::updateList(), SBSolutionBrowser::updateTRF(), SBVLBISessionEditor::wObservs(), SBSourceEditor::wStats(), SBStationEditor::wStats(), and SBStation::~SBStation()\&.
.SS "bool SBMEM::isOK () const\fC [inline]\fP"
.PP
Definition at line 127 of file SbMathMEM\&.H'\&.
.PP
References IsOK\&.
.PP
Referenced by SBSpectrumAnalyserMEM::makeAnalysis(), SBSpectrumAnalyserMEM::readDataFile(), SBSpectrumAnalyserMEM::redrawDataPlot(), and SBSpectrumAnalyserMEM::scan4FPE()\&.
.SS "bool SBMEM::isReady () const\fC [inline]\fP"
.PP
Definition at line 126 of file SbMathMEM\&.H'\&.
.PP
References IsReady\&.
.PP
Referenced by SBSpectrumAnalyserMEM::checkLine(), SBSpectrumAnalyserMEM::makeAnalysis(), SBSpectrumAnalyserMEM::redrawFPEPlot(), and SBSpectrumAnalyserMEM::redrawSpectrumPlot()\&.
.SS "unsigned int SBMEM::m () const\fC [inline]\fP"
.PP
Definition at line 121 of file SbMathMEM\&.H'\&.
.PP
References M\&.
.PP
Referenced by calcA_Recusion(), SBSpectrumAnalyserMEM::checkLine(), SBSpectrumAnalyserMEM::makeAnalysis(), SBSpectrumAnalyserMEM::redrawFPEPlot(), and validM()\&.
.SS "double SBMEM::mod2 (doubler, doublei) const\fC [inline, protected]\fP"
.PP
Definition at line 106 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), and psd()\&.
.SS "double SBMEM::mod2 (std::complex< double >c) const\fC [inline, protected]\fP"
.PP
Definition at line 107 of file SbMathMEM\&.H'\&.
.SS "unsigned int SBMEM::n () const\fC [inline]\fP"
.PP
Definition at line 122 of file SbMathMEM\&.H'\&.
.PP
References N\&.
.PP
Referenced by SBSpectrumAnalyserMEM::checkLine(), SBSpectrumAnalyserMEM::readDataFile(), SBSpectrumAnalyserMEM::redrawDataPlot(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "double SBMEM::pm () const\fC [inline]\fP"
.PP
Definition at line 150 of file SbMathMEM\&.H'\&.
.PP
References Pm\&.
.SS "bool SBMEM::prepareSpectrum ()"
.PP
Definition at line 357 of file SbMathMEM\&.C'\&.
.PP
References calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), ClassName(), createAuxVectors(), SBLog::DATA, SBLog::INF, IsOK, IsReady, Log, M, Type, Type_LSB, Type_LSF, Type_LSFnB, Type_Recursion, and SBLog::write()\&.
.PP
Referenced by SBSpectrumAnalyserMEM::makeAnalysis()\&.
.SS "double SBMEM::psd (doublef)"
.PP
Definition at line 779 of file SbMathMEM\&.C'\&.
.PP
References Am, CI, CZero, DT, fN(), M, mod2(), and Pm\&.
.PP
Referenced by SBSpectrumAnalyserMEM::checkLine(), and SBSpectrumAnalyserMEM::redrawSpectrumPlot()\&.
.SS "void SBMEM::readDataFile (const QString &FileName)"
.PP
Definition at line 118 of file SbMathMEM\&.C'\&.
.PP
References SBVector::at(), ClassName(), SBDataSeriesEntry::data(), SBLog::DATA, SBLog::DBG, DT, SBLog::ERR, fillMissingImag, ignoreNotEquidistant, SBAttributed::isAttr(), IsMSet, IsOK, Log, M, MAuxCreated, N, removeShifts, removeShiftsFromData(), removeTrends, removeTrendsFromData(), SampleVar, SBVector::set(), ShiftI, ShiftR, SBDataSeriesEntry::t(), TrendI, TrendR, SBLog::write(), X, Z_i, and Z_r\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile()\&.
.SS "void SBMEM::removeShiftsFromData ()\fC [protected]\fP"
.PP
Definition at line 305 of file SbMathMEM\&.C'\&.
.PP
References SBVector::at(), N, SBVector::set(), ShiftI, ShiftR, Z_i, and Z_r\&.
.PP
Referenced by readDataFile()\&.
.SS "void SBMEM::removeTrendsFromData ()\fC [protected]\fP"
.PP
Definition at line 324 of file SbMathMEM\&.C'\&.
.PP
References SBVector::at(), N, SBVector::set(), ShiftI, ShiftR, TrendI, TrendR, X, Z_i, and Z_r\&.
.PP
Referenced by readDataFile()\&.
.SS "double SBMEM::sampleVar () const\fC [inline]\fP"
.PP
Definition at line 134 of file SbMathMEM\&.H'\&.
.PP
References SampleVar\&.
.PP
Referenced by SBSpectrumAnalyserMEM::checkLine(), SBSpectrumAnalyserMEM::readDataFile(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "void SBAttributed::setAttributes (uintA_)\fC [inline, inherited]\fP"Sets up the attributes'\&. 
.PP
Definition at line 245 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.PP
Referenced by SBCelestBody::SBCelestBody(), and SBVLBISessionEditor::~SBVLBISessionEditor()\&.
.SS "void SBMEM::setM (unsigned intM_)\fC [inline]\fP"
.PP
Definition at line 138 of file SbMathMEM\&.H'\&.
.PP
References IsMSet, IsReady, M, and validM()\&.
.PP
Referenced by SBSpectrumAnalyserMEM::makeAnalysis()\&.
.SS "void SBMEM::setType (\fBMEMType\fPT_)\fC [inline]\fP"
.PP
Definition at line 140 of file SbMathMEM\&.H'\&.
.PP
References IsReady, and Type\&.
.PP
Referenced by SBSpectrumAnalyserMEM::SBSpectrumAnalyserMEM(), and SBSpectrumAnalyserMEM::setMEMType()\&.
.SS "double SBMEM::shiftI () const\fC [inline]\fP"
.PP
Definition at line 132 of file SbMathMEM\&.H'\&.
.PP
References ShiftI\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "double SBMEM::shiftR () const\fC [inline]\fP"
.PP
Definition at line 130 of file SbMathMEM\&.H'\&.
.PP
References ShiftR\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "double SBMEM::trendI () const\fC [inline]\fP"
.PP
Definition at line 133 of file SbMathMEM\&.H'\&.
.PP
References TrendI\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "double SBMEM::trendR () const\fC [inline]\fP"
.PP
Definition at line 131 of file SbMathMEM\&.H'\&.
.PP
References TrendR\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile(), and SBSpectrumAnalyserMEM::wOptions()\&.
.SS "\fBMEMType\fP SBMEM::type () const\fC [inline]\fP"
.PP
Definition at line 128 of file SbMathMEM\&.H'\&.
.PP
References Type\&.
.PP
Referenced by SBSpectrumAnalyserMEM::wOptions()\&.
.SS "unsigned int SBMEM::validM ()"
.PP
Definition at line 232 of file SbMathMEM\&.C'\&.
.PP
References m(), N, Type, Type_LSB, Type_LSF, Type_LSFnB, and Type_Recursion\&.
.PP
Referenced by SBSpectrumAnalyserMEM::readDataFile(), setM(), and SBSpectrumAnalyserMEM::setMEMType()\&.
.SS "\fBSBVector\fP* SBMEM::x ()\fC [inline]\fP"
.PP
Definition at line 123 of file SbMathMEM\&.H'\&.
.PP
References X\&.
.PP
Referenced by SBSpectrumAnalyserMEM::redrawDataPlot()\&.
.SS "void SBAttributed::xorAttr (uintA_)\fC [inline, inherited]\fP"Toggles the attribute in the storage'\&. 
.PP
Definition at line 251 of file SbGeneral\&.H'\&.
.PP
References SBAttributed::Attr\&.
.PP
Referenced by SBStaParsEditor::acquireData(), SBVLBIPreProcess::toggleEntryMarkEnable(), and SBVLBIPreProcess::toggleEntryMoveEnable()\&.
.SS "\fBSBVector\fP* SBMEM::z_i ()\fC [inline]\fP"
.PP
Definition at line 125 of file SbMathMEM\&.H'\&.
.PP
References Z_i\&.
.PP
Referenced by SBSpectrumAnalyserMEM::redrawDataPlot()\&.
.SS "\fBSBVector\fP* SBMEM::z_r ()\fC [inline]\fP"
.PP
Definition at line 124 of file SbMathMEM\&.H'\&.
.PP
References Z_r\&.
.PP
Referenced by SBSpectrumAnalyserMEM::redrawDataPlot()\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "QDataStream& operator<< (QDataStream &s, const \fBSBAttributed\fP &A)\fC [friend, inherited]\fP"
.PP
Definition at line 259 of file SbGeneral\&.H'\&.
.SS "QDataStream& operator>> (QDataStream &s, \fBSBAttributed\fP &A)\fC [friend, inherited]\fP"
.PP
Definition at line 260 of file SbGeneral\&.H'\&.
.SH "Member Data Documentation"
.PP 
.SS "std::complex<double>* \fBSBMEM::Am\fP\fC [protected]\fP"
.PP
Definition at line 65 of file SbMathMEM\&.H'\&.
.PP
Referenced by am(), calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), createAuxVectors(), psd(), SBMEM(), and ~SBMEM()\&.
.SS "std::complex<double>* \fBSBMEM::Am_1\fP\fC [protected]\fP"
.PP
Definition at line 66 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), createAuxVectors(), SBMEM(), and ~SBMEM()\&.
.SS "const std::complex< double > \fBSBMEM::CI\fP = std::complex<double>(0\&.0, 1\&.0)\fC [static, protected]\fP"
.PP
Definition at line 94 of file SbMathMEM\&.H'\&.
.PP
Referenced by psd()\&.
.SS "const std::complex< double > \fBSBMEM::CZero\fP = std::complex<double>(0\&.0, 0\&.0)\fC [static, protected]\fP"
.PP
Definition at line 93 of file SbMathMEM\&.H'\&.
.PP
Referenced by am(), calcA_Recusion(), and psd()\&.
.SS "double \fBSBMEM::DT\fP\fC [protected]\fP"
.PP
sample interval 
.PP
Definition at line 75 of file SbMathMEM\&.H'\&.
.PP
Referenced by dt(), fN(), psd(), readDataFile(), and SBMEM()\&.
.SS "std::complex<double>* \fBSBMEM::EBm\fP\fC [protected]\fP"
.PP
Definition at line 69 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), createAuxVectors(), SBMEM(), and ~SBMEM()\&.
.SS "std::complex<double>* \fBSBMEM::EBm_1\fP\fC [protected]\fP"
.PP
Definition at line 70 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), createAuxVectors(), SBMEM(), and ~SBMEM()\&.
.SS "std::complex<double>* \fBSBMEM::EFm\fP\fC [protected]\fP"
.PP
Definition at line 67 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), createAuxVectors(), SBMEM(), and ~SBMEM()\&.
.SS "std::complex<double>* \fBSBMEM::EFm_1\fP\fC [protected]\fP"
.PP
Definition at line 68 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), createAuxVectors(), SBMEM(), and ~SBMEM()\&.
.SS "bool \fBSBMEM::IsMSet\fP\fC [protected]\fP"
.PP
Definition at line 83 of file SbMathMEM\&.H'\&.
.PP
Referenced by am(), createAuxVectors(), readDataFile(), SBMEM(), and setM()\&.
.SS "bool \fBSBMEM::IsOK\fP\fC [protected]\fP"
.PP
Definition at line 76 of file SbMathMEM\&.H'\&.
.PP
Referenced by fN(), fpe(), interval(), isOK(), prepareSpectrum(), readDataFile(), and SBMEM()\&.
.SS "bool \fBSBMEM::IsReady\fP\fC [protected]\fP"
.PP
Definition at line 77 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), isReady(), prepareSpectrum(), SBMEM(), setM(), and setType()\&.
.SS "unsigned int \fBSBMEM::M\fP\fC [protected]\fP"
.PP
the length of the filter 
.PP
Definition at line 85 of file SbMathMEM\&.H'\&.
.PP
Referenced by am(), calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), createAuxVectors(), fpe(), m(), prepareSpectrum(), psd(), readDataFile(), SBMEM(), and setM()\&.
.SS "unsigned int \fBSBMEM::MAuxCreated\fP\fC [protected]\fP"
.PP
Definition at line 89 of file SbMathMEM\&.H'\&.
.PP
Referenced by createAuxVectors(), readDataFile(), and SBMEM()\&.
.SS "unsigned int \fBSBMEM::N\fP\fC [protected]\fP"
.PP
the number of points 
.PP
Definition at line 86 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), createAuxVectors(), fpe(), interval(), n(), readDataFile(), removeShiftsFromData(), removeTrendsFromData(), SBMEM(), and validM()\&.
.SS "double \fBSBMEM::Pm\fP\fC [protected]\fP"
.PP
Definition at line 71 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), fpe(), pm(), psd(), and SBMEM()\&.
.SS "double \fBSBMEM::Pm_1\fP\fC [protected]\fP"
.PP
Definition at line 72 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_Recusion(), and SBMEM()\&.
.SS "double \fBSBMEM::SampleVar\fP\fC [protected]\fP"
.PP
Definition at line 90 of file SbMathMEM\&.H'\&.
.PP
Referenced by readDataFile(), sampleVar(), and SBMEM()\&.
.SS "double \fBSBMEM::ShiftI\fP\fC [protected]\fP"
.PP
Definition at line 79 of file SbMathMEM\&.H'\&.
.PP
Referenced by readDataFile(), removeShiftsFromData(), removeTrendsFromData(), SBMEM(), and shiftI()\&.
.SS "double \fBSBMEM::ShiftR\fP\fC [protected]\fP"
.PP
Definition at line 78 of file SbMathMEM\&.H'\&.
.PP
Referenced by readDataFile(), removeShiftsFromData(), removeTrendsFromData(), SBMEM(), and shiftR()\&.
.SS "double \fBSBMEM::TrendI\fP\fC [protected]\fP"
.PP
Definition at line 81 of file SbMathMEM\&.H'\&.
.PP
Referenced by readDataFile(), removeTrendsFromData(), SBMEM(), and trendI()\&.
.SS "double \fBSBMEM::TrendR\fP\fC [protected]\fP"
.PP
Definition at line 80 of file SbMathMEM\&.H'\&.
.PP
Referenced by readDataFile(), removeTrendsFromData(), SBMEM(), and trendR()\&.
.SS "\fBMEMType\fP \fBSBMEM::Type\fP\fC [protected]\fP"
.PP
the method of a's calculation 
.PP
Definition at line 87 of file SbMathMEM\&.H'\&.
.PP
Referenced by prepareSpectrum(), SBMEM(), setType(), type(), and validM()\&.
.SS "\fBSBVector\fP* \fBSBMEM::X\fP\fC [protected]\fP"
.PP
the argument 
.PP
Definition at line 61 of file SbMathMEM\&.H'\&.
.PP
Referenced by interval(), readDataFile(), removeTrendsFromData(), SBMEM(), x(), and ~SBMEM()\&.
.SS "\fBSBVector\fP* \fBSBMEM::Z_i\fP\fC [protected]\fP"
.PP
imagenary part of data 
.PP
Definition at line 63 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), readDataFile(), removeShiftsFromData(), removeTrendsFromData(), SBMEM(), z_i(), and ~SBMEM()\&.
.SS "\fBSBVector\fP* \fBSBMEM::Z_r\fP\fC [protected]\fP"
.PP
real part of data 
.PP
Definition at line 62 of file SbMathMEM\&.H'\&.
.PP
Referenced by calcA_LSBackward(), calcA_LSFnB(), calcA_LSForward(), calcA_Recusion(), readDataFile(), removeShiftsFromData(), removeTrendsFromData(), SBMEM(), z_r(), and ~SBMEM()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SteelBreeze Reference Manual from the source code'\&.
